import{_ as e,o as t,c as a,R as r}from"./chunks/framework.8T5t_Jyi.js";const m=JSON.parse('{"title":"helpers/css-breakpoint","description":"","frontmatter":{"title":"helpers/css-breakpoint"},"headers":[],"relativePath":"javascript/helpers-css-breakpoint.md","filePath":"javascript/helpers-css-breakpoint.md"}'),o={name:"javascript/helpers-css-breakpoint.md"},i=r('<p><a name="module_helpers/css-breakpoint"></a></p><h2 id="helpers-css-breakpoint" tabindex="-1">helpers/css-breakpoint <a class="header-anchor" href="#helpers-css-breakpoint" aria-label="Permalink to &quot;helpers/css-breakpoint&quot;">​</a></h2><ul><li><a href="#module_helpers/css-breakpoint">helpers/css-breakpoint</a><ul><li><em>static</em><ul><li><a href="#module_helpers/css-breakpoint.CssBreakpoints">.CssBreakpoints</a><ul><li><a href="#new_module_helpers/css-breakpoint.CssBreakpoints_new">new exports.CssBreakpoints(config)</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+getBreakpoint">.getBreakpoint()</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+update">.update()</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+at">.at(name)</a></li></ul></li></ul></li><li><em>inner</em><ul><li><a href="#module_helpers/css-breakpoint..BreakpointDirection">~BreakpointDirection</a><ul><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+change">.change()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+_call">._call()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+getHandlers">.getHandlers()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+add">.add(handler)</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+remove">.remove()</a></li></ul></li><li><a href="#module_helpers/css-breakpoint..Breakpoint">~Breakpoint</a><ul><li><a href="#module_helpers/css-breakpoint..Breakpoint+_setDirection">._setDirection(direction, active)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+max">.max(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+min">.min(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+only">.only(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+remove">.remove(handler, direction)</a></li></ul></li></ul></li></ul></li></ul><p><a name="module_helpers/css-breakpoint.CssBreakpoints"></a></p><h3 id="helpers-css-breakpoint-cssbreakpoints" tabindex="-1">helpers/css-breakpoint.CssBreakpoints <a class="header-anchor" href="#helpers-css-breakpoint-cssbreakpoints" aria-label="Permalink to &quot;helpers/css-breakpoint.CssBreakpoints&quot;">​</a></h3><p>Class that provides method for retrieving and acting on breakpoints passed from CSS (using element psuedo content prop)</p><p><strong>Kind</strong>: static class of <a href="#module_helpers/css-breakpoint"><code>helpers/css-breakpoint</code></a></p><ul><li><a href="#module_helpers/css-breakpoint.CssBreakpoints">.CssBreakpoints</a><ul><li><a href="#new_module_helpers/css-breakpoint.CssBreakpoints_new">new exports.CssBreakpoints(config)</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+getBreakpoint">.getBreakpoint()</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+update">.update()</a></li><li><a href="#module_helpers/css-breakpoint.CssBreakpoints+at">.at(name)</a></li></ul></li></ul><p><a name="new_module_helpers/css-breakpoint.CssBreakpoints_new"></a></p><h4 id="new-exports-cssbreakpoints-config" tabindex="-1">new exports.CssBreakpoints(config) <a class="header-anchor" href="#new-exports-cssbreakpoints-config" aria-label="Permalink to &quot;new exports.CssBreakpoints(config)&quot;">​</a></h4><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>config</td><td><code>Object</code></td><td>Configruation object</td></tr><tr><td>config.order</td><td><code>Array</code></td><td>Required, Array of strings that correspond to the breakpoints setup in the styles, Breakpoints from smallest to largest</td></tr><tr><td>config.element</td><td><code>Node</code></td><td>The element to retrieve active breakpoint from stylesheet (default is body)</td></tr><tr><td>config.psuedoSelector</td><td><code>String</code></td><td>Change psuedo selector used to get the breakpoint from the psuedo&#39;s content property</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint.CssBreakpoints+getBreakpoint"></a></p><h4 id="cssbreakpoints-getbreakpoint" tabindex="-1">cssBreakpoints.getBreakpoint() <a class="header-anchor" href="#cssbreakpoints-getbreakpoint" aria-label="Permalink to &quot;cssBreakpoints.getBreakpoint()&quot;">​</a></h4><p>Get breakpoint from element (design note: user could override prototype)</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint.CssBreakpoints"><code>CssBreakpoints</code></a><br><a name="module_helpers/css-breakpoint.CssBreakpoints+update"></a></p><h4 id="cssbreakpoints-update" tabindex="-1">cssBreakpoints.update() <a class="header-anchor" href="#cssbreakpoints-update" aria-label="Permalink to &quot;cssBreakpoints.update()&quot;">​</a></h4><p>Updates the active breakpoint by checking the element and executes handlers on change</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint.CssBreakpoints"><code>CssBreakpoints</code></a><br><a name="module_helpers/css-breakpoint.CssBreakpoints+at"></a></p><h4 id="cssbreakpoints-at-name" tabindex="-1">cssBreakpoints.at(name) <a class="header-anchor" href="#cssbreakpoints-at-name" aria-label="Permalink to &quot;cssBreakpoints.at(name)&quot;">​</a></h4><p>Get a breakpoint by key</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint.CssBreakpoints"><code>CssBreakpoints</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>name</td><td><code>String</code></td><td>The name of the breakpoint to get</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..BreakpointDirection"></a></p><h3 id="helpers-css-breakpoint-breakpointdirection" tabindex="-1">helpers/css-breakpoint~BreakpointDirection <a class="header-anchor" href="#helpers-css-breakpoint-breakpointdirection" aria-label="Permalink to &quot;helpers/css-breakpoint~BreakpointDirection&quot;">​</a></h3><p>Used to handle a breakpoints direction&#39;s handler and state</p><p><strong>Kind</strong>: inner class of <a href="#module_helpers/css-breakpoint"><code>helpers/css-breakpoint</code></a></p><ul><li><a href="#module_helpers/css-breakpoint..BreakpointDirection">~BreakpointDirection</a><ul><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+change">.change()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+_call">._call()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+getHandlers">.getHandlers()</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+add">.add(handler)</a></li><li><a href="#module_helpers/css-breakpoint..BreakpointDirection+remove">.remove()</a></li></ul></li></ul><p><a name="module_helpers/css-breakpoint..BreakpointDirection+change"></a></p><h4 id="breakpointdirection-change" tabindex="-1">breakpointDirection.change() <a class="header-anchor" href="#breakpointdirection-change" aria-label="Permalink to &quot;breakpointDirection.change()&quot;">​</a></h4><p>Change the state of the direction</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..BreakpointDirection"><code>BreakpointDirection</code></a><br><a name="module_helpers/css-breakpoint..BreakpointDirection+_call"></a></p><h4 id="breakpointdirection-call" tabindex="-1">breakpointDirection._call() <a class="header-anchor" href="#breakpointdirection-call" aria-label="Permalink to &quot;breakpointDirection.\\_call()&quot;">​</a></h4><p>Calls all functions in handlers or</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..BreakpointDirection"><code>BreakpointDirection</code></a><br><a name="module_helpers/css-breakpoint..BreakpointDirection+getHandlers"></a></p><h4 id="breakpointdirection-gethandlers" tabindex="-1">breakpointDirection.getHandlers() <a class="header-anchor" href="#breakpointdirection-gethandlers" aria-label="Permalink to &quot;breakpointDirection.getHandlers()&quot;">​</a></h4><p>Returns handlers in normalized object format on/off</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..BreakpointDirection"><code>BreakpointDirection</code></a><br><a name="module_helpers/css-breakpoint..BreakpointDirection+add"></a></p><h4 id="breakpointdirection-add-handler" tabindex="-1">breakpointDirection.add(handler) <a class="header-anchor" href="#breakpointdirection-add-handler" aria-label="Permalink to &quot;breakpointDirection.add(handler)&quot;">​</a></h4><p>Adds a handler for the direction, optionally use object to add off state handler</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..BreakpointDirection"><code>BreakpointDirection</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>handler</td><td><code>function</code> | <code>Object</code></td><td>Function to be executed when direction is active, read object description for on/off</td></tr><tr><td>handler.on</td><td><code>function</code> | <code>Object</code></td><td>Function to be executed when direction is active</td></tr><tr><td>handler.off</td><td><code>function</code> | <code>Object</code></td><td>Function to be executed when direction was active and is now changed to inactive</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..BreakpointDirection+remove"></a></p><h4 id="breakpointdirection-remove" tabindex="-1">breakpointDirection.remove() <a class="header-anchor" href="#breakpointdirection-remove" aria-label="Permalink to &quot;breakpointDirection.remove()&quot;">​</a></h4><p>Removes a handler</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..BreakpointDirection"><code>BreakpointDirection</code></a><br><a name="module_helpers/css-breakpoint..Breakpoint"></a></p><h3 id="helpers-css-breakpoint-breakpoint" tabindex="-1">helpers/css-breakpoint~Breakpoint <a class="header-anchor" href="#helpers-css-breakpoint-breakpoint" aria-label="Permalink to &quot;helpers/css-breakpoint~Breakpoint&quot;">​</a></h3><p>Single breakpoint management</p><p><strong>Kind</strong>: inner class of <a href="#module_helpers/css-breakpoint"><code>helpers/css-breakpoint</code></a></p><ul><li><a href="#module_helpers/css-breakpoint..Breakpoint">~Breakpoint</a><ul><li><a href="#module_helpers/css-breakpoint..Breakpoint+_setDirection">._setDirection(direction, active)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+max">.max(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+min">.min(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+only">.only(handler)</a></li><li><a href="#module_helpers/css-breakpoint..Breakpoint+remove">.remove(handler, direction)</a></li></ul></li></ul><p><a name="module_helpers/css-breakpoint..Breakpoint+_setDirection"></a></p><h4 id="breakpoint-setdirection-direction-active" tabindex="-1">breakpoint._setDirection(direction, active) <a class="header-anchor" href="#breakpoint-setdirection-direction-active" aria-label="Permalink to &quot;breakpoint.\\_setDirection(direction, active)&quot;">​</a></h4><p>Private method used inrternally for managing direction activation</p><ul><li>Each direction manages it&#39;s own state and handlers</li></ul><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..Breakpoint"><code>Breakpoint</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>direction</td><td><code>String</code></td><td>The directional key</td></tr><tr><td>active</td><td><code>Boolean</code></td><td>State of that direction to set</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..Breakpoint+max"></a></p><h4 id="breakpoint-max-handler" tabindex="-1">breakpoint.max(handler) <a class="header-anchor" href="#breakpoint-max-handler" aria-label="Permalink to &quot;breakpoint.max(handler)&quot;">​</a></h4><p>Attach handler to be executed from the breakpoint and to all breakpoints below.</p><ul><li>If the browser resizes from a breakpoint below this breakpoint, and above the breakpoint name specified, this handler will fire</li></ul><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..Breakpoint"><code>Breakpoint</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>handler</td><td><code>function</code></td><td>Handler to be executed</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..Breakpoint+min"></a></p><h4 id="breakpoint-min-handler" tabindex="-1">breakpoint.min(handler) <a class="header-anchor" href="#breakpoint-min-handler" aria-label="Permalink to &quot;breakpoint.min(handler)&quot;">​</a></h4><p>Attach handler to be executed from the breakpoint and to all breakpoints below.</p><ul><li>If the browser resizes from a breakpoint above this breakpoint, and below the breakpoint name specified, this handler will fire</li></ul><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..Breakpoint"><code>Breakpoint</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>handler</td><td><code>function</code></td><td>Handler to be executed</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..Breakpoint+only"></a></p><h4 id="breakpoint-only-handler" tabindex="-1">breakpoint.only(handler) <a class="header-anchor" href="#breakpoint-only-handler" aria-label="Permalink to &quot;breakpoint.only(handler)&quot;">​</a></h4><p>Attach a handler to fire when the breakpoint is within the key</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..Breakpoint"><code>Breakpoint</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>handler</td><td><code>function</code></td><td>Handler to be executed</td></tr></tbody></table><p><a name="module_helpers/css-breakpoint..Breakpoint+remove"></a></p><h4 id="breakpoint-remove-handler-direction" tabindex="-1">breakpoint.remove(handler, direction) <a class="header-anchor" href="#breakpoint-remove-handler-direction" aria-label="Permalink to &quot;breakpoint.remove(handler, direction)&quot;">​</a></h4><p>Remove handler</p><p><strong>Kind</strong>: instance method of <a href="#module_helpers/css-breakpoint..Breakpoint"><code>Breakpoint</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>handler</td><td><code>function</code></td><td>Handler to be removed, extended on/off object style can be used</td></tr><tr><td>direction</td><td><code>String</code></td><td>Remove handler only from specified direction, else search all directions</td></tr></tbody></table>',77),n=[i];function s(d,p,l,c,h,k){return t(),a("div",null,n)}const u=e(o,[["render",s]]);export{m as __pageData,u as default};
