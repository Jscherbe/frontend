import{S as d,a as u}from"./chunks/SassdocDetails.TLogzwYn.js";import{_ as c,D as h,o as k,c as g,k as t,a as e,I as i,w as n,R as l}from"./chunks/framework.8T5t_Jyi.js";const p=[{groupName:"breakpoint",id:"variable-config",uid:"breakpoint-variable-config",title:"$config",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#variable-config"},{groupName:"breakpoint",id:"mixin-set",uid:"breakpoint-mixin-set",title:"set()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-set",previewsByIndex:{}},{groupName:"breakpoint",id:"function-get",uid:"breakpoint-function-get",title:"get()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#function-get",previewsByIndex:{}},{groupName:"breakpoint",id:"variable-sizes",uid:"breakpoint-variable-sizes",title:"$sizes",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#variable-sizes"},{groupName:"breakpoint",id:"mixin-set-sizes",uid:"breakpoint-mixin-set-sizes",title:"set-sizes()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-set-sizes",previewsByIndex:{}},{groupName:"breakpoint",id:"function-get-sizes",uid:"breakpoint-function-get-sizes",title:"get-sizes()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#function-get-sizes"},{groupName:"breakpoint",id:"function-get-size",uid:"breakpoint-function-get-size",title:"get-size()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#function-get-size"},{groupName:"breakpoint",id:"function-exists",uid:"breakpoint-function-exists",title:"exists()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#function-exists"},{groupName:"breakpoint",id:"mixin-min",uid:"breakpoint-mixin-min",title:"min()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-min",previewsByIndex:{}},{groupName:"breakpoint",id:"mixin-max",uid:"breakpoint-mixin-max",title:"max()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-max",previewsByIndex:{}},{groupName:"breakpoint",id:"mixin-min-max",uid:"breakpoint-mixin-min-max",title:"min-max()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-min-max",previewsByIndex:{}},{groupName:"breakpoint",id:"mixin-from",uid:"breakpoint-mixin-from",title:"from()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-from",previewsByIndex:{}},{groupName:"breakpoint",id:"mixin-embed-for-scripts",uid:"breakpoint-mixin-embed-for-scripts",title:"embed-for-scripts()",groupPath:"/core/breakpoint/",path:"/core/breakpoint/#mixin-embed-for-scripts"}],m={components:{SassdocPreview:d,SassdocDetails:u},provide:{getSassdocItem(r){return p.find(o=>o.uid===r)},getSassdocGroup(){return p},sassdocPreviewOptions:JSON.parse(decodeURIComponent("%7B%22previewStyles%22%3A%22%5Cn%20%20%20%20height%3A%2020em%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20border%3A%20none%3B%5Cn%20%20%20%20background-color%3A%20%23f9f9f9%3B%5Cn%20%20%20%20border-radius%3A%206px%3B%5Cn%20%20%20%20padding%3A%2012px%3B%5Cn%20%20%20%20margin%3A%201.5em%200%3B%5Cn%20%20%22%2C%22previewHead%22%3A%22%5Cn%20%20%20%20%3Ctitle%3ESassdoc%20Example%3C%2Ftitle%3E%20%5Cn%20%20%20%20%3Cmeta%20charset%3D%5C%22utf-8%5C%22%3E%20%5Cn%20%20%20%20%3Cmeta%20name%3D%5C%22viewport%5C%22%20content%3D%5C%22width%3Ddevice-width%2C%20initial-scale%3D1%5C%22%3E%20%5Cn%20%20%20%20%3Clink%20rel%3D%5C%22stylesheet%5C%22%20href%3D%5C%22%2Fsassdoc-preview.css%5C%22%3E%5Cn%20%20%22%2C%22previewScripts%22%3A%22%5Cn%20%20%20%20%3Cscript%20src%3D%5C%22%2Fsassdoc-preview.js%5C%22%3E%3C%2Fscript%3E%5Cn%20%20%22%7D"))}},Lt=JSON.parse('{"title":"Breakpoint","description":"","frontmatter":{"title":"Breakpoint","sassdocGroupName":"breakpoint","outline":"deep"},"headers":[],"relativePath":"core/breakpoint/index.md","filePath":"core/breakpoint/index.md"}'),b=t("h1",{id:"breakpoint",tabindex:"-1"},[e("Breakpoint "),t("a",{class:"header-anchor",href:"#breakpoint","aria-label":'Permalink to "Breakpoint"'},"​")],-1),y=t("h2",{id:"variables",tabindex:"-1"},[e("Variables "),t("a",{class:"header-anchor",href:"#variables","aria-label":'Permalink to "Variables"'},"​")],-1),x={id:"variable-config",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#variable-config","aria-label":'Permalink to "$config <Badge text="variable" type="tip" vertical="top" /><Badge text="Map" type="warning" vertical="top" />  {#variable-config}"'},"​",-1),_=t("p",null,"Module Settings",-1),E=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" variable")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 9-14")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 16-21")])],-1),F=l('<h4 id="map-properties" tabindex="-1">Map Properties <a class="header-anchor" href="#map-properties" aria-label="Permalink to &quot;Map Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">base</td><td style="text-align:left;">Number</td><td style="text-align:left;">16px</td><td style="text-align:left;">Assumed pixel base, can change based on users font settings so this is just o get us in the ballpark). Note this is not the base font size but the user agent&#39;s or user&#39;s browser preferernce. This number is just being used for calculating estimated em sizes from average base. Since pixels are easier to understand but since we allow the user to set their font size. All of our css is relative to that, including most of the layout (rems, other relative units)</td></tr><tr><td style="text-align:left;">gap</td><td style="text-align:left;">Number</td><td style="text-align:left;">0.01em</td><td style="text-align:left;">The amount to offset min from max media queries incase you are using both (ie prevent overlap)</td></tr><tr><td style="text-align:left;">null-name</td><td style="text-align:left;">String</td><td style="text-align:left;">&quot;none&quot;</td><td style="text-align:left;">The name of the space from 0 to the first breakpoint (doesn&#39;t really matter) used when passing breakpoints to JS via content property</td></tr><tr><td style="text-align:left;">default</td><td style="text-align:left;">String</td><td style="text-align:left;">&quot;small&quot;</td><td style="text-align:left;">The name of the breakpont that is considered the major change (ie desktop to mobile) used by other modules/components</td></tr></tbody></table>',2),q={id:"variable-sizes",tabindex:"-1"},v=t("a",{class:"header-anchor",href:"#variable-sizes","aria-label":'Permalink to "$sizes <Badge text="variable" type="tip" vertical="top" /><Badge text="Map" type="warning" vertical="top" />  {#variable-sizes}"'},"​",-1),C=t("p",null,"The default breakpoint sizes (targets are not precise, using em's)",-1),T=t("ul",null,[t("li",null,"Map of breakpoints"),t("li",null,"Each property is the breakpoints name"),t("li",null,"Each value is that breakpoints point (set in em)")],-1),P=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" variable")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 43-47")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 49-53")])],-1),B=t("h2",{id:"mixins",tabindex:"-1"},[e("Mixins "),t("a",{class:"header-anchor",href:"#mixins","aria-label":'Permalink to "Mixins"'},"​")],-1),A={id:"mixin-set",tabindex:"-1"},z=t("a",{class:"header-anchor",href:"#mixin-set","aria-label":'Permalink to "set() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-set}"'},"​",-1),D=t("p",null,"Change modules $config",-1),S=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 23-26")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 28-30")])],-1),N=l('<h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>Change default name</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(( </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ));</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of changes</td></tr></tbody></table><h4 id="require" tabindex="-1">Require <a class="header-anchor" href="#require" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#variable-config">$config</a></li></ul>',7),w={id:"mixin-set-sizes",tabindex:"-1"},I=t("a",{class:"header-anchor",href:"#mixin-set-sizes","aria-label":'Permalink to "set-sizes() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-set-sizes}"'},"​",-1),R=t("p",null,"Update the breakpoint sizes map",-1),$=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 55-62")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 64-66")])],-1),M=l(`<h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>Changing the medium breakpoint and adding jumbo</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;jumbo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">A map to merge into the breakpoints map</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">$merge-mode</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Merge stradegy see, utils.map-merge options</td><td style="text-align:left;">null</td></tr></tbody></table><h4 id="require-1" tabindex="-1">Require <a class="header-anchor" href="#require-1" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>map-merge()</li><li><a href="/frontend/core/breakpoint/#variable-sizes">$sizes</a></li></ul>`,7),V={id:"mixin-min",tabindex:"-1"},L=t("a",{class:"header-anchor",href:"#mixin-min","aria-label":'Permalink to "min() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-min}"'},"​",-1),G=t("p",null,"Create a media query that matches the min-width for a given size",-1),j=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 90-99")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 101-107")])],-1),Y=l(`<h4 id="examples-2" tabindex="-1">Examples <a class="header-anchor" href="#examples-2" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Your styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   // Your Styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The name of the breakpoint size</td></tr></tbody></table><h4 id="require-2" tabindex="-1">Require <a class="header-anchor" href="#require-2" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#function-get-size">get-size()</a></li></ul>`,7),U={id:"mixin-max",tabindex:"-1"},J=t("a",{class:"header-anchor",href:"#mixin-max","aria-label":'Permalink to "max() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-max}"'},"​",-1),O=t("p",null,"Create a media query that matches the max-width for a given size",-1),H=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 109-118")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 120-126")])],-1),K=l(`<h4 id="examples-3" tabindex="-1">Examples <a class="header-anchor" href="#examples-3" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Your styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42.4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   // Your Styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">The name of the breakpoint size</td></tr></tbody></table><h4 id="require-3" tabindex="-1">Require <a class="header-anchor" href="#require-3" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#function-get-size">get-size()</a></li><li><a href="/frontend/core/breakpoint/#function-get">get()</a></li></ul>`,7),Q={id:"mixin-min-max",tabindex:"-1"},W=t("a",{class:"header-anchor",href:"#mixin-min-max","aria-label":'Permalink to "min-max() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-min-max}"'},"​",-1),X=t("p",null,"Create a media query that matches between two breakpoint sizes",-1),Z=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 128-138")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 140-147")])],-1),tt=l(`<h4 id="examples-4" tabindex="-1">Examples <a class="header-anchor" href="#examples-4" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min-max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Your styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> screen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">75</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   // Your Styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size-min</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The name of the smallest breakpoint size</td></tr><tr><td style="text-align:left;">$size-max</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The name of the largest breakpoint size</td></tr></tbody></table><h4 id="require-4" tabindex="-1">Require <a class="header-anchor" href="#require-4" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#function-get-size">get-size()</a></li></ul>`,7),et={id:"mixin-from",tabindex:"-1"},it=t("a",{class:"header-anchor",href:"#mixin-from","aria-label":'Permalink to "from() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-from}"'},"​",-1),st=t("p",null,"Create a media query from a specific size in either direction",-1),at=t("ul",null,[t("li",null,"This is for mostly programmatic usage, so that a user could pass a breakpoint confiuration in either direction"),t("li",null,"This way you don't need to repeat conditions (ie if min ... else ...)")],-1),nt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 149-159")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 161-173")])],-1),lt=l(`<h4 id="examples-5" tabindex="-1">Examples <a class="header-anchor" href="#examples-5" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$user-breakpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$user-breakpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;direction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> breakpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Your styles</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The name of the breakpoint size</td></tr><tr><td style="text-align:left;">$direction</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The direction the media query should target (min</td></tr></tbody></table><h4 id="throw" tabindex="-1">Throw <a class="header-anchor" href="#throw" aria-label="Permalink to &quot;Throw&quot;">​</a></h4><ul><li>ULU: Mixin error (breakpoint.from), incorrect argument</li></ul><h4 id="require-5" tabindex="-1">Require <a class="header-anchor" href="#require-5" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#mixin-min">min()</a></li><li><a href="/frontend/core/breakpoint/#mixin-max">max()</a></li></ul>`,8),rt={id:"mixin-embed-for-scripts",tabindex:"-1"},ot=t("a",{class:"header-anchor",href:"#mixin-embed-for-scripts","aria-label":'Permalink to "embed-for-scripts() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-embed-for-scripts}"'},"​",-1),ht=t("p",null,"Attaches breakpoints to an element psuedo content for access via script",-1),pt=t("ul",null,[t("li",null,"Note you can also use cssvar.declare-breakpoints to get a similiar implementation with css custom-properties"),t("li",null,"Use with ulu/js/breakpoints. Breakpoints always min-width (upwards) for javascript setup")],-1),dt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 175-177")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 179-189")])],-1),ut=l('<h4 id="require-6" tabindex="-1">Require <a class="header-anchor" href="#require-6" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#mixin-min">min()</a></li><li><a href="/frontend/core/breakpoint/#function-get">get()</a></li><li><a href="/frontend/core/breakpoint/#variable-sizes">$sizes</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2>',3),ct={id:"function-get",tabindex:"-1"},kt=t("a",{class:"header-anchor",href:"#function-get","aria-label":'Permalink to "get() <Badge text="function" type="tip" vertical="top" />  {#function-get}"'},"​",-1),gt=t("p",null,"Get a config option",-1),mt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 32-36")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 38-40")])],-1),bt=l('<h4 id="examples-6" tabindex="-1">Examples <a class="header-anchor" href="#examples-6" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>Get default breakpoint name</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">breakpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Name of property</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">Property Value</td></tr></tbody></table><h4 id="require-7" tabindex="-1">Require <a class="header-anchor" href="#require-7" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>require-map-get()</li><li><a href="/frontend/core/breakpoint/#variable-config">$config</a></li></ul>',9),yt={id:"function-get-sizes",tabindex:"-1"},xt=t("a",{class:"header-anchor",href:"#function-get-sizes","aria-label":'Permalink to "get-sizes() <Badge text="function" type="tip" vertical="top" />  {#function-get-sizes}"'},"​",-1),ft=t("p",null,"Get all breakpoint sizes (ie. $sizes)",-1),_t=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 68-68")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 69-71")])],-1),Et=t("h4",{id:"require-8",tabindex:"-1"},[e("Require "),t("a",{class:"header-anchor",href:"#require-8","aria-label":'Permalink to "Require"'},"​")],-1),Ft=t("ul",null,[t("li",null,[t("a",{href:"/frontend/core/breakpoint/#variable-sizes"},"$sizes")])],-1),qt={id:"function-get-size",tabindex:"-1"},vt=t("a",{class:"header-anchor",href:"#function-get-size","aria-label":'Permalink to "get-size() <Badge text="function" type="tip" vertical="top" />  {#function-get-size}"'},"​",-1),Ct=t("p",null,"Geta a specific size",-1),Tt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 73-75")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 76-79")])],-1),Pt=l('<h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The name of the size to get</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Number</td><td style="text-align:left;">The sizes value</td></tr></tbody></table><h4 id="require-9" tabindex="-1">Require <a class="header-anchor" href="#require-9" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>require-map-get()</li><li><a href="/frontend/core/breakpoint/#variable-sizes">$sizes</a></li></ul>',6),Bt={id:"function-exists",tabindex:"-1"},At=t("a",{class:"header-anchor",href:"#function-exists","aria-label":'Permalink to "exists() <Badge text="function" type="tip" vertical="top" />  {#function-exists}"'},"​",-1),zt=t("p",null,"Check if a specific size exist",-1),Dt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _breakpoint.scss")]),t("li",null,[t("strong",null,"Group:"),e(" breakpoint")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 81-83")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 85-88")])],-1),St=l('<h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The breakpoint size to check if exists</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">Boolean</td></tr></tbody></table><h4 id="require-10" tabindex="-1">Require <a class="header-anchor" href="#require-10" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/core/breakpoint/#function-get">get()</a></li><li><a href="/frontend/core/breakpoint/#variable-sizes">$sizes</a></li></ul>',6);function Nt(r,o,wt,It,Rt,$t){const s=h("Badge"),a=h("SassdocDetails");return k(),g("div",null,[b,y,t("h3",x,[e("$config "),i(s,{text:"variable",type:"tip",vertical:"top"}),i(s,{text:"Map",type:"warning",vertical:"top"}),e(),f]),_,i(a,{summaryText:"Meta Information"},{default:n(()=>[E]),_:1}),F,t("h3",q,[e("$sizes "),i(s,{text:"variable",type:"tip",vertical:"top"}),i(s,{text:"Map",type:"warning",vertical:"top"}),e(),v]),C,T,i(a,{summaryText:"Meta Information"},{default:n(()=>[P]),_:1}),B,t("h3",A,[e("set() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),z]),D,i(a,{summaryText:"Meta Information"},{default:n(()=>[S]),_:1}),N,t("h3",w,[e("set-sizes() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),I]),R,i(a,{summaryText:"Meta Information"},{default:n(()=>[$]),_:1}),M,t("h3",V,[e("min() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),L]),G,i(a,{summaryText:"Meta Information"},{default:n(()=>[j]),_:1}),Y,t("h3",U,[e("max() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),J]),O,i(a,{summaryText:"Meta Information"},{default:n(()=>[H]),_:1}),K,t("h3",Q,[e("min-max() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),W]),X,i(a,{summaryText:"Meta Information"},{default:n(()=>[Z]),_:1}),tt,t("h3",et,[e("from() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),it]),st,at,i(a,{summaryText:"Meta Information"},{default:n(()=>[nt]),_:1}),lt,t("h3",rt,[e("embed-for-scripts() "),i(s,{text:"mixin",type:"tip",vertical:"top"}),e(),ot]),ht,pt,i(a,{summaryText:"Meta Information"},{default:n(()=>[dt]),_:1}),ut,t("h3",ct,[e("get() "),i(s,{text:"function",type:"tip",vertical:"top"}),e(),kt]),gt,i(a,{summaryText:"Meta Information"},{default:n(()=>[mt]),_:1}),bt,t("h3",yt,[e("get-sizes() "),i(s,{text:"function",type:"tip",vertical:"top"}),e(),xt]),ft,i(a,{summaryText:"Meta Information"},{default:n(()=>[_t]),_:1}),Et,Ft,t("h3",qt,[e("get-size() "),i(s,{text:"function",type:"tip",vertical:"top"}),e(),vt]),Ct,i(a,{summaryText:"Meta Information"},{default:n(()=>[Tt]),_:1}),Pt,t("h3",Bt,[e("exists() "),i(s,{text:"function",type:"tip",vertical:"top"}),e(),At]),zt,i(a,{summaryText:"Meta Information"},{default:n(()=>[Dt]),_:1}),St])}const Gt=c(m,[["render",Nt]]);export{Lt as __pageData,Gt as default};
