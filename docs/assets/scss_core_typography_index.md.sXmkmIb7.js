import{S as d,a as u}from"./chunks/SassdocDetails.TLogzwYn.js";import{_ as g,D as o,o as c,c as k,k as t,a as e,I as s,w as n,R as a}from"./chunks/framework.8T5t_Jyi.js";const p=[{groupName:"typography",id:"variable-config",uid:"typography-variable-config",title:"$config",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#variable-config"},{groupName:"typography",id:"mixin-set",uid:"typography-mixin-set",title:"set()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#mixin-set"},{groupName:"typography",id:"function-get",uid:"typography-function-get",title:"get()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-get"},{groupName:"typography",id:"function-scale",uid:"typography-function-scale",title:"scale()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-scale"},{groupName:"typography",id:"function-scale-line-height",uid:"typography-function-scale-line-height",title:"scale-line-height()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-scale-line-height"},{groupName:"typography",id:"function-rem",uid:"typography-function-rem",title:"rem()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-rem"},{groupName:"typography",id:"function-em",uid:"typography-function-em",title:"em()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-em"},{groupName:"typography",id:"mixin-word-break",uid:"typography-mixin-word-break",title:"word-break()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#mixin-word-break"},{groupName:"typography",id:"function-new-size",uid:"typography-function-new-size",title:"new-size()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-new-size"},{groupName:"typography",id:"variable-sizes",uid:"typography-variable-sizes",title:"$sizes",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#variable-sizes"},{groupName:"typography",id:"mixin-set-sizes",uid:"typography-mixin-set-sizes",title:"set-sizes()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#mixin-set-sizes",previewsByIndex:{}},{groupName:"typography",id:"function-get-size",uid:"typography-function-get-size",title:"get-size()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-get-size"},{groupName:"typography",id:"function-font-size",uid:"typography-function-font-size",title:"font-size()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-font-size"},{groupName:"typography",id:"function-unitless-line-height",uid:"typography-function-unitless-line-height",title:"unitless-line-height()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-unitless-line-height"},{groupName:"typography",id:"function-get-size-converted-value",uid:"typography-function-get-size-converted-value",title:"get-size-converted-value()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-get-size-converted-value"},{groupName:"typography",id:"function-get-size-value",uid:"typography-function-get-size-value",title:"get-size-value()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#function-get-size-value"},{groupName:"typography",id:"mixin-font-size-responsive",uid:"typography-mixin-font-size-responsive",title:"font-size-responsive()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#mixin-font-size-responsive"},{groupName:"typography",id:"mixin-size",uid:"typography-mixin-size",title:"size()",groupPath:"/scss/core/typography/",path:"/scss/core/typography/#mixin-size"}],y={components:{SassdocPreview:d,SassdocDetails:u},provide:{getSassdocItem(r){return p.find(h=>h.uid===r)},getSassdocGroup(){return p},sassdocPreviewOptions:JSON.parse(decodeURIComponent("%7B%22previewStyles%22%3A%22%5Cn%20%20%20%20height%3A%2020em%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20border%3A%20none%3B%5Cn%20%20%20%20background-color%3A%20%23f9f9f9%3B%5Cn%20%20%20%20border-radius%3A%206px%3B%5Cn%20%20%20%20padding%3A%2012px%3B%5Cn%20%20%20%20margin%3A%201.5em%200%3B%5Cn%20%20%22%2C%22previewHead%22%3A%22%5Cn%20%20%20%20%3Ctitle%3EULU%20Example%3C%2Ftitle%3E%20%5Cn%20%20%20%20%3Cmeta%20charset%3D%5C%22utf-8%5C%22%3E%20%5Cn%20%20%20%20%3Cmeta%20name%3D%5C%22viewport%5C%22%20content%3D%5C%22width%3Ddevice-width%2C%20initial-scale%3D1%5C%22%3E%20%5Cn%20%20%20%20%3Clink%20rel%3D%5C%22stylesheet%5C%22%20href%3D%5C%22%2Ffrontend%2Fulu-frontend.min.css%5C%22%3E%5Cn%20%20%22%2C%22previewScripts%22%3A%22%5Cn%20%20%20%20%3Cscript%20src%3D%5C%22%2Ffrontend%2Fulu-frontend.min.js%5C%22%3E%3C%2Fscript%3E%5Cn%20%20%22%7D"))}},pe=JSON.parse('{"title":"Typography","description":"","frontmatter":{"title":"Typography","sassdocGroupName":"typography","outline":"deep"},"headers":[],"relativePath":"scss/core/typography/index.md","filePath":"scss/core/typography/index.md"}'),f=t("h1",{id:"typography",tabindex:"-1"},[e("Typography "),t("a",{class:"header-anchor",href:"#typography","aria-label":'Permalink to "Typography"'},"​")],-1),E=t("h2",{id:"variables",tabindex:"-1"},[e("Variables "),t("a",{class:"header-anchor",href:"#variables","aria-label":'Permalink to "Variables"'},"​")],-1),m={id:"variable-config",tabindex:"-1"},_=t("a",{class:"header-anchor",href:"#variable-config","aria-label":'Permalink to "$config <Badge text="variable" type="tip" vertical="top" /><Badge text="Map" type="warning" vertical="top" />  {#variable-config}"'},"​",-1),x=a(`<p>Module Settings</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-family&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui-sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Open Sans&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Helvetica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-family-sans&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui-sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Open Sans&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Helvetica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Arial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-family-serif&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : (Cambria, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Georgia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-family-monospace&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : (Menlo, Consolas, Monaco, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">monospace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight-headline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight-light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight-normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight-semibold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;font-weight-bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;line-height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;line-height-dense&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;line-height-spaced&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;size-ratio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;size-line-height-ratio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.97</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;scale-steps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;responsive-change&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;margin-bottom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;margin-top&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  false,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;letter-spacing-uppercase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.04</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;max-width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;max-width-small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,2),b=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" variable")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 17-27")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 29-53")])],-1),F=a('<h4 id="map-properties" tabindex="-1">Map Properties <a class="header-anchor" href="#map-properties" aria-label="Permalink to &quot;Map Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$config.font-size</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default font size (use pixels, converted, is used for rem base)</td></tr><tr><td style="text-align:left;">$config.font-family</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default font family</td></tr><tr><td style="text-align:left;">$config.font-family-monospace</td><td style="text-align:left;">Number</td><td style="text-align:left;">Base font-family for monospace</td></tr><tr><td style="text-align:left;">$config.line-height</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default line height</td></tr><tr><td style="text-align:left;">$config.line-height-dense</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default dense line height</td></tr><tr><td style="text-align:left;">$config.size-ratio</td><td style="text-align:left;">Number</td><td style="text-align:left;">Font size scale when using preset sizes, ratio mixin)</td></tr><tr><td style="text-align:left;">$config.size-line-height-ratio</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default line height scaling (when using preset sizes, ratio mixin). Can shrink line-height as size increase if desrireable</td></tr><tr><td style="text-align:left;">$config.responsive-change</td><td style="text-align:left;">Number</td><td style="text-align:left;">Amount to scale typography by browser&#39;s width (use viewport units)</td></tr><tr><td style="text-align:left;">$config.margin</td><td style="text-align:left;">Number</td><td style="text-align:left;">Default margin for typography (like paragraphs)</td></tr></tbody></table><h4 id="todos" tabindex="-1">Todos <a class="header-anchor" href="#todos" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul>',4),C={id:"variable-sizes",tabindex:"-1"},q=t("a",{class:"header-anchor",href:"#variable-sizes","aria-label":'Permalink to "$sizes <Badge text="variable" type="tip" vertical="top" /><Badge text="Map" type="warning" vertical="top" />  {#variable-sizes}"'},"​",-1),T=a(`<p>Default size presets</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$sizes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;small-x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :         </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :          </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;large&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :         </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;large-x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;large-xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :      </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;large-xxx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :     </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;h6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :            </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),   </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,2),z=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" variable")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 143-152")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 154-168")])],-1),v=a('<h4 id="map-properties-1" tabindex="-1">Map Properties <a class="header-anchor" href="#map-properties-1" aria-label="Permalink to &quot;Map Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size.name</td><td style="text-align:left;">Number</td><td style="text-align:left;">Name of size</td></tr><tr><td style="text-align:left;">$size.name.font-size</td><td style="text-align:left;">Number</td><td style="text-align:left;">Font size in rems or pixels</td></tr><tr><td style="text-align:left;">$size.name.line-height</td><td style="text-align:left;">Number</td><td style="text-align:left;">Line height (unitless)</td></tr><tr><td style="text-align:left;">$size.name.responsive</td><td style="text-align:left;">Number</td><td style="text-align:left;">Apply responsive sizes</td></tr><tr><td style="text-align:left;">$size.name.base-class</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">This style should be included in the base (top can be overriden)</td></tr><tr><td style="text-align:left;">$size.name.helper-class</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">This style should be included in the helpers (overrides)</td></tr></tbody></table><h4 id="todos-1" tabindex="-1">Todos <a class="header-anchor" href="#todos-1" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Add adaptive and use a map of breakpoints and whether it&#39;s up or down</li><li>Add headlines</li></ul><h2 id="mixins" tabindex="-1">Mixins <a class="header-anchor" href="#mixins" aria-label="Permalink to &quot;Mixins&quot;">​</a></h2>',5),P={id:"mixin-set",tabindex:"-1"},B=t("a",{class:"header-anchor",href:"#mixin-set","aria-label":'Permalink to "set() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-set}"'},"​",-1),S=t("p",null,"Change modules $config",-1),A=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 55-57")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 59-61")])],-1),w=a('<h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of changes</td></tr><tr><td style="text-align:left;">@include typography.set-options(( &quot;font-size&quot; : 14px ));</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h4 id="todos-2" tabindex="-1">Todos <a class="header-anchor" href="#todos-2" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require" tabindex="-1">Require <a class="header-anchor" href="#require" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#variable-config">$config</a></li></ul>',6),I={id:"mixin-word-break",tabindex:"-1"},N=t("a",{class:"header-anchor",href:"#mixin-word-break","aria-label":'Permalink to "word-break() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-word-break}"'},"​",-1),D=t("p",null,"Break word stradegy",-1),R=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 114-115")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 117-121")])],-1),$=a('<h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$force</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;">Force words to break (will have unusual breaks)</td></tr></tbody></table><h4 id="todos-3" tabindex="-1">Todos <a class="header-anchor" href="#todos-3" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul>',4),M={id:"mixin-set-sizes",tabindex:"-1"},V=t("a",{class:"header-anchor",href:"#mixin-set-sizes","aria-label":'Permalink to "set-sizes() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-set-sizes}"'},"​",-1),L=t("p",null,"Update the typography presets map",-1),G=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 170-177")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 179-181")])],-1),O=a(`<h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>Setting the error and type color</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> typography</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">A map to merge into the color palette</td></tr><tr><td style="text-align:left;">$deep</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Use deep merge</td></tr><tr><td style="text-align:left;">$overwrite</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Overwrite the presets completly (cannot be used with deep)</td></tr></tbody></table><h4 id="todos-4" tabindex="-1">Todos <a class="header-anchor" href="#todos-4" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-1" tabindex="-1">Require <a class="header-anchor" href="#require-1" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>map-merge()</li><li><a href="/frontend/scss/core/breakpoint/#variable-sizes">$sizes</a></li></ul>`,9),U={id:"mixin-font-size-responsive",tabindex:"-1"},H=t("a",{class:"header-anchor",href:"#mixin-font-size-responsive","aria-label":'Permalink to "font-size-responsive() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-font-size-responsive}"'},"​",-1),j=t("p",null,"Print's the responsive type formula",-1),J=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 267-269")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 271-273")])],-1),W=a('<h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$font-size</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Name to retrieve from sizes map or a unique size map that follows the API</td></tr><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Modifications to be merged into size before using</td></tr></tbody></table><h4 id="todos-5" tabindex="-1">Todos <a class="header-anchor" href="#todos-5" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul>',4),Y={id:"mixin-size",tabindex:"-1"},K=t("a",{class:"header-anchor",href:"#mixin-size","aria-label":'Permalink to "size() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-size}"'},"​",-1),Q=t("p",null,"Print a typography size (font-size, line-height)",-1),X=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 275-278")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 280-320")])],-1),Z=a('<h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$nameOrMap</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Name to retrieve from sizes map or a unique size map that follows the API</td></tr><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Modifications to be merged into size before using</td></tr><tr><td style="text-align:left;">$only-font-size</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;">Only print the font size</td></tr></tbody></table><h4 id="todos-6" tabindex="-1">Todos <a class="header-anchor" href="#todos-6" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-2" tabindex="-1">Require <a class="header-anchor" href="#require-2" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/typography/#mixin-font-size-responsive">font-size-responsive()</a></li><li><a href="/frontend/scss/core/breakpoint/#function-get-size">get-size()</a></li><li><a href="/frontend/scss/core/typography/#function-get-size-converted-value">get-size-converted-value()</a></li><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li><li><a href="/frontend/scss/core/typography/#function-get-size-value">get-size-value()</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2>',7),tt={id:"function-get",tabindex:"-1"},et=t("a",{class:"header-anchor",href:"#function-get","aria-label":'Permalink to "get() <Badge text="function" type="tip" vertical="top" />  {#function-get}"'},"​",-1),st=t("p",null,"Get a config option",-1),it=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 63-65")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 67-69")])],-1),at=a('<h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of changes</td></tr><tr><td style="text-align:left;">@include typography.set-options(( &quot;font-size&quot; : 14px ));</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><h4 id="todos-7" tabindex="-1">Todos <a class="header-anchor" href="#todos-7" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-3" tabindex="-1">Require <a class="header-anchor" href="#require-3" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>require-map-get()</li><li><a href="/frontend/scss/core/breakpoint/#variable-config">$config</a></li></ul>',6),lt={id:"function-scale",tabindex:"-1"},nt=t("a",{class:"header-anchor",href:"#function-scale","aria-label":'Permalink to "scale() <Badge text="function" type="tip" vertical="top" />  {#function-scale}"'},"​",-1),rt=t("p",null,"Get scale of the base font-size",-1),ht=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 71-73")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 75-77")])],-1),ot=a('<h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$step</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Current size in the scale you want to calculate</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Number</td><td style="text-align:left;">Scaled value</td></tr></tbody></table><h4 id="todos-8" tabindex="-1">Todos <a class="header-anchor" href="#todos-8" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-4" tabindex="-1">Require <a class="header-anchor" href="#require-4" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/calculate/#function-ratio-scale-size">ratio-scale-size()</a></li><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',8),pt={id:"function-scale-line-height",tabindex:"-1"},dt=t("a",{class:"header-anchor",href:"#function-scale-line-height","aria-label":'Permalink to "scale-line-height() <Badge text="function" type="tip" vertical="top" />  {#function-scale-line-height}"'},"​",-1),ut=t("p",null,"Get scale of the line-height",-1),gt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 79-82")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 84-86")])],-1),ct=a('<h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$step</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Current size in the scale you want to calculate</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Number</td><td style="text-align:left;">Scaled value</td></tr></tbody></table><h4 id="todos-9" tabindex="-1">Todos <a class="header-anchor" href="#todos-9" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Setup breakpoints</li></ul><h4 id="require-5" tabindex="-1">Require <a class="header-anchor" href="#require-5" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/calculate/#function-ratio-scale-size">ratio-scale-size()</a></li><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',8),kt={id:"function-rem",tabindex:"-1"},yt=t("a",{class:"header-anchor",href:"#function-rem","aria-label":'Permalink to "rem() <Badge text="function" type="tip" vertical="top" />  {#function-rem}"'},"​",-1),ft=t("p",null,"Convert pixel value to rem value based on typography $font-size",-1),Et=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 88-90")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 92-98")])],-1),mt=a('<h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$pixels</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Pixel value to convert from</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Number</td><td style="text-align:left;">Rem value</td></tr></tbody></table><h4 id="todos-10" tabindex="-1">Todos <a class="header-anchor" href="#todos-10" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-6" tabindex="-1">Require <a class="header-anchor" href="#require-6" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',8),_t={id:"function-em",tabindex:"-1"},xt=t("a",{class:"header-anchor",href:"#function-em","aria-label":'Permalink to "em() <Badge text="function" type="tip" vertical="top" />  {#function-em}"'},"​",-1),bt=t("p",null,"Changes pixels to em",-1),Ft=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 100-103")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 105-112")])],-1),Ct=a('<h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$value</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Pixel value to convert from</td></tr><tr><td style="text-align:left;">$base</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Conversion base (defaults to font-size)</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Number</td><td style="text-align:left;">Rem value</td></tr></tbody></table><h4 id="todos-11" tabindex="-1">Todos <a class="header-anchor" href="#todos-11" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-7" tabindex="-1">Require <a class="header-anchor" href="#require-7" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',8),qt={id:"function-new-size",tabindex:"-1"},Tt=t("a",{class:"header-anchor",href:"#function-new-size","aria-label":'Permalink to "new-size() <Badge text="function" type="tip" vertical="top" />  {#function-new-size}"'},"​",-1),zt=t("p",null,"Creates a size map",-1),vt=t("ul",null,[t("li",null,"This is just an accelerator for creating a size map"),t("li",null,"You can pass your own size maps using set-sizes()")],-1),Pt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 123-128")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 130-141")])],-1),Bt=a('<h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$font-size</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Font size</td></tr><tr><td style="text-align:left;">$line-height</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Line height</td></tr><tr><td style="text-align:left;">$is-headline</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;">Is a headline</td></tr></tbody></table><h4 id="todos-12" tabindex="-1">Todos <a class="header-anchor" href="#todos-12" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-8" tabindex="-1">Require <a class="header-anchor" href="#require-8" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',6),St={id:"function-get-size",tabindex:"-1"},At=t("a",{class:"header-anchor",href:"#function-get-size","aria-label":'Permalink to "get-size() <Badge text="function" type="tip" vertical="top" />  {#function-get-size}"'},"​",-1),wt=t("p",null,"Get a size's map",-1),It=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 183-185")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 187-189")])],-1),Nt=a('<h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Name of size</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">Map</td></tr></tbody></table><h4 id="todos-13" tabindex="-1">Todos <a class="header-anchor" href="#todos-13" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-9" tabindex="-1">Require <a class="header-anchor" href="#require-9" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>require-map-get()</li><li><a href="/frontend/scss/core/breakpoint/#variable-sizes">$sizes</a></li></ul>',8),Dt={id:"function-font-size",tabindex:"-1"},Rt=t("a",{class:"header-anchor",href:"#function-font-size","aria-label":'Permalink to "font-size() <Badge text="function" type="tip" vertical="top" />  {#function-font-size}"'},"​",-1),$t=t("p",null,"Print a font-size for a given size",-1),Mt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 191-193")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 195-199")])],-1),Vt=a('<h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$value</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Size name</td></tr></tbody></table><h4 id="todos-14" tabindex="-1">Todos <a class="header-anchor" href="#todos-14" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Remove doesn&#39;t work for breakpoints or responsive</li></ul><h4 id="require-10" tabindex="-1">Require <a class="header-anchor" href="#require-10" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get-size">get-size()</a></li><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li><li><a href="/frontend/scss/core/typography/#function-rem">rem()</a></li></ul>',6),Lt={id:"function-unitless-line-height",tabindex:"-1"},Gt=t("a",{class:"header-anchor",href:"#function-unitless-line-height","aria-label":'Permalink to "unitless-line-height() <Badge text="function" type="tip" vertical="top" />  {#function-unitless-line-height}"'},"​",-1),Ot=t("p",null,"Forces conversion to unitless line-height",-1),Ut=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 201-203")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 205-219")])],-1),Ht=a('<h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$line-height</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Line height size in px, em, or rem</td></tr><tr><td style="text-align:left;">$font-size</td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">Font size in px, em, or rem</td></tr></tbody></table><h4 id="throw" tabindex="-1">Throw <a class="header-anchor" href="#throw" aria-label="Permalink to &quot;Throw&quot;">​</a></h4><ul><li>ULU: Unable to convert to unitless line-height for: #{ $line-height }</li></ul><h4 id="todos-15" tabindex="-1">Todos <a class="header-anchor" href="#todos-15" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-11" tabindex="-1">Require <a class="header-anchor" href="#require-11" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li>strip-unit()</li><li><a href="/frontend/scss/core/typography/#function-rem">rem()</a></li></ul>',8),jt={id:"function-get-size-converted-value",tabindex:"-1"},Jt=t("a",{class:"header-anchor",href:"#function-get-size-converted-value","aria-label":'Permalink to "get-size-converted-value() <Badge text="function" type="tip" vertical="top" />  {#function-get-size-converted-value}"'},"​",-1),Wt=t("p",null,"Print a value from the size and convert it (to appropriate unit for framework)",-1),Yt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 220-222")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 224-250")])],-1),Kt=a('<h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Size&#39;s map</td></tr><tr><td style="text-align:left;">$props</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The property to get</td></tr></tbody></table><h4 id="todos-16" tabindex="-1">Todos <a class="header-anchor" href="#todos-16" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-12" tabindex="-1">Require <a class="header-anchor" href="#require-12" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li><li><a href="/frontend/scss/core/typography/#function-unitless-line-height">unitless-line-height()</a></li><li><a href="/frontend/scss/core/typography/#function-rem">rem()</a></li></ul>',6),Qt={id:"function-get-size-value",tabindex:"-1"},Xt=t("a",{class:"header-anchor",href:"#function-get-size-value","aria-label":'Permalink to "get-size-value() <Badge text="function" type="tip" vertical="top" />  {#function-get-size-value}"'},"​",-1),Zt=t("p",null,"Get a sizes property value that doesn't need conversion",-1),te=t("ul",null,[t("li",null,"Reason: Will map to default if user set's size prop to true")],-1),ee=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _typography.scss")]),t("li",null,[t("strong",null,"Group:"),e(" typography")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 253-256")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 258-265")])],-1),se=a('<h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$size</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Size&#39;s map</td></tr><tr><td style="text-align:left;">$props</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The property to get</td></tr></tbody></table><h4 id="todos-17" tabindex="-1">Todos <a class="header-anchor" href="#todos-17" aria-label="Permalink to &quot;Todos&quot;">​</a></h4><ul><li>Idea: Should the maps value be processes when using the set-sizes, set? Instead of recalculated each time get-size is or get is used.</li></ul><h4 id="require-13" tabindex="-1">Require <a class="header-anchor" href="#require-13" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',6);function ie(r,h,ae,le,ne,re){const i=o("Badge"),l=o("SassdocDetails");return c(),k("div",null,[f,E,t("h3",m,[e("$config "),s(i,{text:"variable",type:"tip",vertical:"top"}),s(i,{text:"Map",type:"warning",vertical:"top"}),e(),_]),x,s(l,{summaryText:"Meta Information"},{default:n(()=>[b]),_:1}),F,t("h3",C,[e("$sizes "),s(i,{text:"variable",type:"tip",vertical:"top"}),s(i,{text:"Map",type:"warning",vertical:"top"}),e(),q]),T,s(l,{summaryText:"Meta Information"},{default:n(()=>[z]),_:1}),v,t("h3",P,[e("set() "),s(i,{text:"mixin",type:"tip",vertical:"top"}),e(),B]),S,s(l,{summaryText:"Meta Information"},{default:n(()=>[A]),_:1}),w,t("h3",I,[e("word-break() "),s(i,{text:"mixin",type:"tip",vertical:"top"}),e(),N]),D,s(l,{summaryText:"Meta Information"},{default:n(()=>[R]),_:1}),$,t("h3",M,[e("set-sizes() "),s(i,{text:"mixin",type:"tip",vertical:"top"}),e(),V]),L,s(l,{summaryText:"Meta Information"},{default:n(()=>[G]),_:1}),O,t("h3",U,[e("font-size-responsive() "),s(i,{text:"mixin",type:"tip",vertical:"top"}),e(),H]),j,s(l,{summaryText:"Meta Information"},{default:n(()=>[J]),_:1}),W,t("h3",Y,[e("size() "),s(i,{text:"mixin",type:"tip",vertical:"top"}),e(),K]),Q,s(l,{summaryText:"Meta Information"},{default:n(()=>[X]),_:1}),Z,t("h3",tt,[e("get() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),et]),st,s(l,{summaryText:"Meta Information"},{default:n(()=>[it]),_:1}),at,t("h3",lt,[e("scale() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),nt]),rt,s(l,{summaryText:"Meta Information"},{default:n(()=>[ht]),_:1}),ot,t("h3",pt,[e("scale-line-height() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),dt]),ut,s(l,{summaryText:"Meta Information"},{default:n(()=>[gt]),_:1}),ct,t("h3",kt,[e("rem() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),yt]),ft,s(l,{summaryText:"Meta Information"},{default:n(()=>[Et]),_:1}),mt,t("h3",_t,[e("em() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),xt]),bt,s(l,{summaryText:"Meta Information"},{default:n(()=>[Ft]),_:1}),Ct,t("h3",qt,[e("new-size() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),Tt]),zt,vt,s(l,{summaryText:"Meta Information"},{default:n(()=>[Pt]),_:1}),Bt,t("h3",St,[e("get-size() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),At]),wt,s(l,{summaryText:"Meta Information"},{default:n(()=>[It]),_:1}),Nt,t("h3",Dt,[e("font-size() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),Rt]),$t,s(l,{summaryText:"Meta Information"},{default:n(()=>[Mt]),_:1}),Vt,t("h3",Lt,[e("unitless-line-height() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),Gt]),Ot,s(l,{summaryText:"Meta Information"},{default:n(()=>[Ut]),_:1}),Ht,t("h3",jt,[e("get-size-converted-value() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),Jt]),Wt,s(l,{summaryText:"Meta Information"},{default:n(()=>[Yt]),_:1}),Kt,t("h3",Qt,[e("get-size-value() "),s(i,{text:"function",type:"tip",vertical:"top"}),e(),Xt]),Zt,te,s(l,{summaryText:"Meta Information"},{default:n(()=>[ee]),_:1}),se])}const de=g(y,[["render",ie]]);export{pe as __pageData,de as default};
