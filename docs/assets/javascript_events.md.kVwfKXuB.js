import{_ as e,o as t,c as a,R as s}from"./chunks/framework.8T5t_Jyi.js";const u=JSON.parse('{"title":"events","description":"","frontmatter":{"title":"events"},"headers":[],"relativePath":"javascript/events.md","filePath":"javascript/events.md"}'),n={name:"javascript/events.md"},i=s(`<p><a name="module_events"></a></p><h2 id="events" tabindex="-1">events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;events&quot;">​</a></h2><ul><li><a href="#module_events">events</a><ul><li><em>static</em><ul><li><a href="#module_events.dispatch">.dispatch(type, context)</a></li><li><a href="#module_events.getName">.getName(type)</a> ⇒ <code>String</code></li></ul></li><li><em>inner</em><ul><li><a href="#module_events..events">~events</a></li></ul></li></ul></li></ul><p><a name="module_events.dispatch"></a></p><h3 id="events-dispatch-type-context" tabindex="-1">events.dispatch(type, context) <a class="header-anchor" href="#events-dispatch-type-context" aria-label="Permalink to &quot;events.dispatch(type, context)&quot;">​</a></h3><p>Triggers one of our custom events</p><p><strong>Kind</strong>: static method of <a href="#module_events"><code>events</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td><code>String</code></td><td>Type of event to dispatch</td></tr><tr><td>context</td><td><code>Node</code></td><td>Element to trigger the event from</td></tr></tbody></table><p><strong>Example</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (updatedMarkup) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pageModified&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, modalElement);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p><a name="module_events.getName"></a></p><h3 id="events-getname-type-⇒-string" tabindex="-1">events.getName(type) ⇒ <code>String</code> <a class="header-anchor" href="#events-getname-type-⇒-string" aria-label="Permalink to &quot;events.getName(type) ⇒ &lt;code&gt;String&lt;/code&gt;&quot;">​</a></h3><p>Handles the actual event names being used (future could namespace)</p><p><strong>Kind</strong>: static method of <a href="#module_events"><code>events</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td><code>String</code></td><td>Type of event to get the actual event name for</td></tr></tbody></table><p><a name="module_events..events"></a></p><h3 id="events-events" tabindex="-1">events~events <a class="header-anchor" href="#events-events" aria-label="Permalink to &quot;events~events&quot;">​</a></h3><p>Event object - called on dispatch</p><p><strong>Kind</strong>: inner constant of <a href="#module_events"><code>events</code></a></p>`,19),d=[i];function o(l,r,p,h,c,v){return t(),a("div",null,d)}const g=e(n,[["render",o]]);export{u as __pageData,g as default};
