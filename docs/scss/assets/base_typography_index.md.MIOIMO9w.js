import{S as r,a as c}from"./chunks/SassdocDetails.KoPilHFG.js";import{_ as d,C as n,o as h,c as u,k as s,a,H as l,w as y,Q as g}from"./chunks/framework.BC1u4dxX.js";const o=[{groupName:"typography",id:"mixin-styles",uid:"typography-mixin-styles",title:"styles()",groupPath:"/base/typography/",path:"/base/typography/#mixin-styles",previewsByIndex:{}}],m={components:{SassdocPreview:r,SassdocDetails:c},provide:{getSassdocItem(e){return o.find(t=>t.uid===e)},getSassdocGroup(){return o},sassdocPreviewOptions:JSON.parse(decodeURIComponent("%7B%22previewStyles%22%3A%22%5Cn%20%20%20%20height%3A%2020em%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20border%3A%20none%3B%5Cn%20%20%20%20background-color%3A%20%23f9f9f9%3B%5Cn%20%20%20%20border-radius%3A%206px%3B%5Cn%20%20%20%20padding%3A%2012px%3B%5Cn%20%20%20%20margin%3A%201.5em%200%3B%5Cn%20%20%22%2C%22previewHead%22%3A%22%5Cn%20%20%20%20%3Ctitle%3ESassdoc%20Example%3C%2Ftitle%3E%20%5Cn%20%20%20%20%3Cmeta%20charset%3D%5C%22utf-8%5C%22%3E%20%5Cn%20%20%20%20%3Cmeta%20name%3D%5C%22viewport%5C%22%20content%3D%5C%22width%3Ddevice-width%2C%20initial-scale%3D1%5C%22%3E%20%5Cn%20%20%20%20%3Clink%20rel%3D%5C%22stylesheet%5C%22%20href%3D%5C%22%2Fsassdoc-preview.css%5C%22%3E%5Cn%20%20%22%2C%22previewScripts%22%3A%22%5Cn%20%20%20%20%3Cscript%20src%3D%5C%22%2Fsassdoc-preview.js%5C%22%3E%3C%2Fscript%3E%5Cn%20%20%22%7D"))}},P=JSON.parse('{"title":"Typography","description":"","frontmatter":{"title":"Typography","sassdocGroupName":"typography","outline":"deep"},"headers":[],"relativePath":"base/typography/index.md","filePath":"base/typography/index.md"}'),C=s("h1",{id:"typography",tabindex:"-1"},[a("Typography "),s("a",{class:"header-anchor",href:"#typography","aria-label":'Permalink to "Typography"'},"​")],-1),_=s("h2",{id:"mixins",tabindex:"-1"},[a("Mixins "),s("a",{class:"header-anchor",href:"#mixins","aria-label":'Permalink to "Mixins"'},"​")],-1),x={id:"mixin-styles",tabindex:"-1"},q=s("a",{class:"header-anchor",href:"#mixin-styles","aria-label":'Permalink to "styles() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-styles}"'},"​",-1),b=s("p",null,"Prints elements base styles",-1),v=s("ul",null,[s("li",null,[s("strong",null,"File:"),a(" _typography.scss")]),s("li",null,[s("strong",null,"Group:"),a(" typography")]),s("li",null,[s("strong",null,"Type:"),a(" mixin")]),s("li",null,[s("strong",null,"Lines (comments):"),a(" 10-19")]),s("li",null,[s("strong",null,"Lines (code):"),a(" 21-41")])],-1),A=g(`<h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">ulu</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">base-typography-styles</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ulu</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">base-typography-styles</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Example of type size as base unprefixed</p><div class="language-raw vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">raw</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h1&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h2&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h3&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h4&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h5&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;span class=&quot;h6&quot;&gt;A&lt;/span&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;span class=&quot;h1&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;span class=&quot;h2&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;span class=&quot;h3&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;span class=&quot;h4&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;span class=&quot;h5&quot;&gt;A&lt;/span&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;span class=&quot;h6&quot;&gt;A&lt;/span&gt;</span></span></code></pre></div><h4 id="require" tabindex="-1">Require <a class="header-anchor" href="#require" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="/scss/base/elements/#function-get">get()</a></li></ul>`,6);function f(e,t,E,k,B,w){const p=n("Badge"),i=n("SassdocDetails");return h(),u("div",null,[C,_,s("h3",x,[a("styles() "),l(p,{text:"mixin",type:"tip",vertical:"top"}),a(),q]),b,l(i,{summaryText:"Meta Information"},{default:y(()=>[v]),_:1}),A])}const T=d(m,[["render",f]]);export{P as __pageData,T as default};
