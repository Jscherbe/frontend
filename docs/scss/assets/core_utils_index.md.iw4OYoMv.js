import{S as c,a as h}from"./chunks/SassdocDetails.fkos_0vC.js";import{_ as p,C as u,o as f,c as g,k as t,a as e,H as l,w as n,Q as s}from"./chunks/framework.ILDWLLY1.js";const d=[{groupName:"utils",id:"variable-config",uid:"utils-variable-config",title:"$config",groupPath:"/core/utils/",path:"/core/utils/#variable-config"},{groupName:"utils",id:"mixin-set",uid:"utils-mixin-set",title:"set()",groupPath:"/core/utils/",path:"/core/utils/#mixin-set",previewsByIndex:{}},{groupName:"utils",id:"function-get",uid:"utils-function-get",title:"get()",groupPath:"/core/utils/",path:"/core/utils/#function-get",previewsByIndex:{}},{groupName:"utils",id:"function-require-map-get",uid:"utils-function-require-map-get",title:"require-map-get()",groupPath:"/core/utils/",path:"/core/utils/#function-require-map-get"},{groupName:"utils",id:"mixin-require-list-has",uid:"utils-mixin-require-list-has",title:"require-list-has()",groupPath:"/core/utils/",path:"/core/utils/#mixin-require-list-has"},{groupName:"utils",id:"mixin-require-list-contains",uid:"utils-mixin-require-list-contains",title:"require-list-contains()",groupPath:"/core/utils/",path:"/core/utils/#mixin-require-list-contains"},{groupName:"utils",id:"function-included",uid:"utils-function-included",title:"included()",groupPath:"/core/utils/",path:"/core/utils/#function-included"},{groupName:"utils",id:"mixin-file-header",uid:"utils-mixin-file-header",title:"file-header()",groupPath:"/core/utils/",path:"/core/utils/#mixin-file-header"},{groupName:"utils",id:"function-if-type",uid:"utils-function-if-type",title:"if-type()",groupPath:"/core/utils/",path:"/core/utils/#function-if-type"},{groupName:"utils",id:"function-number-info",uid:"utils-function-number-info",title:"number-info()",groupPath:"/core/utils/",path:"/core/utils/#function-number-info"},{groupName:"utils",id:"function-map-merge",uid:"utils-function-map-merge",title:"map-merge()",groupPath:"/core/utils/",path:"/core/utils/#function-map-merge"},{groupName:"utils",id:"function-map-merge-or-overwrite",uid:"utils-function-map-merge-or-overwrite",title:"map-merge-or-overwrite()",groupPath:"/core/utils/",path:"/core/utils/#function-map-merge-or-overwrite"},{groupName:"utils",id:"function-fallback",uid:"utils-function-fallback",title:"fallback()",groupPath:"/core/utils/",path:"/core/utils/#function-fallback"},{groupName:"utils",id:"function-map-fallback",uid:"utils-function-map-fallback",title:"map-fallback()",groupPath:"/core/utils/",path:"/core/utils/#function-map-fallback"},{groupName:"utils",id:"function-function-fallback",uid:"utils-function-function-fallback",title:"function-fallback()",groupPath:"/core/utils/",path:"/core/utils/#function-function-fallback"},{groupName:"utils",id:"function-string-replace",uid:"utils-function-string-replace",title:"string-replace()",groupPath:"/core/utils/",path:"/core/utils/#function-string-replace"}],m={components:{SassdocPreview:c,SassdocDetails:h},provide:{getSassdocItem(o){return d.find(r=>r.uid===o)},getSassdocGroup(){return d},sassdocPreviewOptions:JSON.parse(decodeURIComponent("%7B%22previewStyles%22%3A%22%5Cn%20%20%20%20height%3A%2020em%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20border%3A%20none%3B%5Cn%20%20%20%20background-color%3A%20%23f9f9f9%3B%5Cn%20%20%20%20border-radius%3A%206px%3B%5Cn%20%20%20%20padding%3A%2012px%3B%5Cn%20%20%20%20margin%3A%201.5em%200%3B%5Cn%20%20%22%2C%22previewHead%22%3A%22%5Cn%20%20%20%20%3Ctitle%3ESassdoc%20Example%3C%2Ftitle%3E%20%5Cn%20%20%20%20%3Cmeta%20charset%3D%5C%22utf-8%5C%22%3E%20%5Cn%20%20%20%20%3Cmeta%20name%3D%5C%22viewport%5C%22%20content%3D%5C%22width%3Ddevice-width%2C%20initial-scale%3D1%5C%22%3E%20%5Cn%20%20%20%20%3Clink%20rel%3D%5C%22stylesheet%5C%22%20href%3D%5C%22%2Fsassdoc-preview.css%5C%22%3E%5Cn%20%20%22%2C%22previewScripts%22%3A%22%5Cn%20%20%20%20%3Cscript%20src%3D%5C%22%2Fsassdoc-preview.js%5C%22%3E%3C%2Fscript%3E%5Cn%20%20%22%7D"))}},te=JSON.parse('{"title":"Utils","description":"","frontmatter":{"title":"Utils","sassdocGroupName":"utils","outline":"deep"},"headers":[],"relativePath":"core/utils/index.md","filePath":"core/utils/index.md"}'),_=t("h1",{id:"utils",tabindex:"-1"},[e("Utils "),t("a",{class:"header-anchor",href:"#utils","aria-label":'Permalink to "Utils"'},"​")],-1),y=t("h2",{id:"variables",tabindex:"-1"},[e("Variables "),t("a",{class:"header-anchor",href:"#variables","aria-label":'Permalink to "Variables"'},"​")],-1),x={id:"variable-config",tabindex:"-1"},b=t("a",{class:"header-anchor",href:"#variable-config","aria-label":'Permalink to "$config <Badge text="variable" type="tip" vertical="top" /><Badge text="Map" type="warning" vertical="top" />  {#variable-config}"'},"​",-1),T=t("p",null,"Module Settings",-1),q=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" variable")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 11-14")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 16-19")])],-1),P=s('<h4 id="map-properties" tabindex="-1">Map Properties <a class="header-anchor" href="#map-properties" aria-label="Permalink to &quot;Map Properties&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$config.debug-maps</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">Debugs include map print outs</td></tr><tr><td style="text-align:left;">$config.file-header-comments</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">Remove comment headers if you&#39;d like</td></tr></tbody></table><h2 id="mixins" tabindex="-1">Mixins <a class="header-anchor" href="#mixins" aria-label="Permalink to &quot;Mixins&quot;">​</a></h2>',3),v={id:"mixin-set",tabindex:"-1"},k=t("a",{class:"header-anchor",href:"#mixin-set","aria-label":'Permalink to "set() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-set}"'},"​",-1),C=t("p",null,"Change modules $config",-1),S=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 21-24")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 25-27")])],-1),E=s('<h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>General example, replace module-name with module&#39;s name</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">module-name</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(( </span><span style="color:#9ECBFF;">&quot;property&quot;</span><span style="color:#E1E4E8;"> : value ));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#E36209;">module-name</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(( </span><span style="color:#032F62;">&quot;property&quot;</span><span style="color:#24292E;"> : value ));</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of changes</td></tr></tbody></table><h4 id="require" tabindex="-1">Require <a class="header-anchor" href="#require" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/breakpoint/#variable-config">$config</a></li></ul>',7),w={id:"mixin-require-list-has",tabindex:"-1"},A=t("a",{class:"header-anchor",href:"#mixin-require-list-has","aria-label":'Permalink to "require-list-has() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-require-list-has}"'},"​",-1),N=t("p",null,"Ensure a value is present in the list, throw an error if not found",-1),D=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 57-60")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 62-67")])],-1),R=s('<h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$list</td><td style="text-align:left;"><code>List</code></td><td style="text-align:left;">The map to get the value from</td></tr><tr><td style="text-align:left;">$value</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The value to search for in the list</td></tr><tr><td style="text-align:left;">$context</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The context of using this function for debugging help</td></tr></tbody></table><h4 id="throw" tabindex="-1">Throw <a class="header-anchor" href="#throw" aria-label="Permalink to &quot;Throw&quot;">​</a></h4><ul><li>ULU: Unable to find item</li></ul>',4),I={id:"mixin-require-list-contains",tabindex:"-1"},B=t("a",{class:"header-anchor",href:"#mixin-require-list-contains","aria-label":'Permalink to "require-list-contains() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-require-list-contains}"'},"​",-1),$=t("p",null,"Require that the list only is only made up of allowed items",-1),L=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 69-71")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 73-77")])],-1),F=s('<h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$allowed</td><td style="text-align:left;"><code>List</code></td><td style="text-align:left;">The list of allowed items</td></tr><tr><td style="text-align:left;">$list</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The list to test allowed against</td></tr></tbody></table><h4 id="require-1" tabindex="-1">Require <a class="header-anchor" href="#require-1" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/utils/#mixin-require-list-has">require-list-has()</a></li></ul>',4),M={id:"mixin-file-header",tabindex:"-1"},V=t("a",{class:"header-anchor",href:"#mixin-file-header","aria-label":'Permalink to "file-header() <Badge text="mixin" type="tip" vertical="top" />  {#mixin-file-header}"'},"​",-1),G=t("p",null,"Returns true if we should include something (used for output checking)",-1),U=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" mixin")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 88-90")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 92-100")])],-1),j=s('<h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$context</td><td style="text-align:left;"><code>List</code></td><td style="text-align:left;">The root area of the framework this file comes from</td></tr><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>List</code></td><td style="text-align:left;">The name of the specific area/file (optional)</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2>',3),H={id:"function-get",tabindex:"-1"},O=t("a",{class:"header-anchor",href:"#function-get","aria-label":'Permalink to "get() <Badge text="function" type="tip" vertical="top" />  {#function-get}"'},"​",-1),J=t("p",null,"Get a config option",-1),Q=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 29-32")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 34-36")])],-1),W=s('<h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>General example, replace module-name with module&#39;s name</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">module-name</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;property&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#E36209;">module-name</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;property&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Name of property</td></tr></tbody></table><h4 id="require-2" tabindex="-1">Require <a class="header-anchor" href="#require-2" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/utils/#function-require-map-get">require-map-get()</a></li><li><a href="https:/jscherbe.github.io/frontend/scss/core/breakpoint/#variable-config">$config</a></li></ul>',7),z={id:"function-require-map-get",tabindex:"-1"},K=t("a",{class:"header-anchor",href:"#function-require-map-get","aria-label":'Permalink to "require-map-get() <Badge text="function" type="tip" vertical="top" />  {#function-require-map-get}"'},"​",-1),X=t("p",null,"Get a required value from a map, throw an error if not found",-1),Y=t("ul",null,[t("li",null,"Remeber that that maps cannot intentionally use null (use false instead, if trying to avoid output if unconfigured)")],-1),Z=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 38-43")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 45-55")])],-1),tt=s('<h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$map</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">The map to get the value from</td></tr><tr><td style="text-align:left;">$key</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The key in the map to get value from</td></tr><tr><td style="text-align:left;">$context</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">The context of using this function for debugging help</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">The value from the map</td></tr></tbody></table><h4 id="throw-1" tabindex="-1">Throw <a class="header-anchor" href="#throw-1" aria-label="Permalink to &quot;Throw&quot;">​</a></h4><ul><li>ULU: Unable to find</li></ul><h4 id="require-3" tabindex="-1">Require <a class="header-anchor" href="#require-3" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',8),et={id:"function-included",tabindex:"-1"},lt=t("a",{class:"header-anchor",href:"#function-included","aria-label":'Permalink to "included() <Badge text="function" type="tip" vertical="top" />  {#function-included}"'},"​",-1),at=t("p",null,"Returns true if we should include something (map of booleans)",-1),it=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 79-81")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 83-86")])],-1),nt=s('<h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$name</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Name of item to see if it&#39;s included</td></tr><tr><td style="text-align:left;">$includes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of includes</td></tr></tbody></table><h4 id="require-4" tabindex="-1">Require <a class="header-anchor" href="#require-4" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',4),st={id:"function-if-type",tabindex:"-1"},ot=t("a",{class:"header-anchor",href:"#function-if-type","aria-label":'Permalink to "if-type() <Badge text="function" type="tip" vertical="top" />  {#function-if-type}"'},"​",-1),rt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 103-105")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 107-113")])],-1),ut=s('<h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$type</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">type of value it should be</td></tr><tr><td style="text-align:left;">$value</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">the value to provide if it is that type</td></tr><tr><td style="text-align:left;">$fallback</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">the fallback value</td></tr></tbody></table>',2),dt={id:"function-number-info",tabindex:"-1"},ct=t("a",{class:"header-anchor",href:"#function-number-info","aria-label":'Permalink to "number-info() <Badge text="function" type="tip" vertical="top" />  {#function-number-info}"'},"​",-1),ht=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 116-117")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 119-133")])],-1),pt=s('<h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$number</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Number to get meta info for</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Map</td><td style="text-align:left;">With properties (unit, value)</td></tr></tbody></table>',4),ft={id:"function-map-merge",tabindex:"-1"},gt=t("a",{class:"header-anchor",href:"#function-map-merge","aria-label":'Permalink to "map-merge() <Badge text="function" type="tip" vertical="top" />  {#function-map-merge}"'},"​",-1),mt=t("p",null,"Reusable merge method",-1),_t=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 135-139")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 141-149")])],-1),yt=s('<h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$original</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Source map</td></tr><tr><td style="text-align:left;">$changes</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Changes to merge into source map</td></tr><tr><td style="text-align:left;">$mode</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">How to merge changes (merge [defualt], deep, or overwrite)</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Map</td><td style="text-align:left;">New map with changes</td></tr></tbody></table>',4),xt={id:"function-map-merge-or-overwrite",tabindex:"-1"},bt=t("a",{class:"header-anchor",href:"#function-map-merge-or-overwrite","aria-label":'Permalink to "map-merge-or-overwrite() <Badge text="function" type="tip" vertical="top" />  {#function-map-merge-or-overwrite}"'},"​",-1),Tt=t("p",null,"Repeatable pattern in core",-1),qt=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Deprecated"),t("p",null,"Left in for compatability, will be removed, use map-merge with mode")],-1),Pt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 151-152")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 154-162")])],-1),vt=t("h4",{id:"require-5",tabindex:"-1"},[e("Require "),t("a",{class:"header-anchor",href:"#require-5","aria-label":'Permalink to "Require"'},"​")],-1),kt=t("ul",null,[t("li",null,[t("a",{href:"https:/jscherbe.github.io/frontend/scss/core/utils/#function-map-merge"},"map-merge()")])],-1),Ct={id:"function-fallback",tabindex:"-1"},St=t("a",{class:"header-anchor",href:"#function-fallback","aria-label":'Permalink to "fallback() <Badge text="function" type="tip" vertical="top" />  {#function-fallback}"'},"​",-1),Et=t("p",null,"Utility for providing fallbacks, the first truthy value (non false or null) will be returned",-1),wt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 164-165")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 167-174")])],-1),At=s('<h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">The first truthy value</td></tr></tbody></table>',2),Nt={id:"function-map-fallback",tabindex:"-1"},Dt=t("a",{class:"header-anchor",href:"#function-map-fallback","aria-label":'Permalink to "map-fallback() <Badge text="function" type="tip" vertical="top" />  {#function-map-fallback}"'},"​",-1),Rt=t("p",null,"Provides fallback values from the same map",-1),It=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 176-176")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 177-185")])],-1),Bt=t("h4",{id:"require-6",tabindex:"-1"},[e("Require "),t("a",{class:"header-anchor",href:"#require-6","aria-label":'Permalink to "Require"'},"​")],-1),$t=t("ul",null,[t("li",null,[t("a",{href:"https:/jscherbe.github.io/frontend/scss/core/breakpoint/#function-get"},"get()")])],-1),Lt={id:"function-function-fallback",tabindex:"-1"},Ft=t("a",{class:"header-anchor",href:"#function-function-fallback","aria-label":'Permalink to "function-fallback() <Badge text="function" type="tip" vertical="top" />  {#function-function-fallback}"'},"​",-1),Mt=t("p",null,"Helps in providing a dynamic fallback for modules whose defaults should come from another",-1),Vt=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 187-191")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 193-202")])],-1),Gt=s('<h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$prop</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">Property trying to get fallback for</td></tr><tr><td style="text-align:left;">$value</td><td style="text-align:left;"><code>*</code></td><td style="text-align:left;">The value that may need the fallback</td></tr><tr><td style="text-align:left;">$lookup</td><td style="text-align:left;"><code>Map</code></td><td style="text-align:left;">Map of properties to functions (use sass:meta &gt; meta.get-function to populate)</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">The user&#39;s original value, or if the value is true get the default value from the provided function</td></tr></tbody></table><h4 id="require-7" tabindex="-1">Require <a class="header-anchor" href="#require-7" aria-label="Permalink to &quot;Require&quot;">​</a></h4><ul><li><a href="https:/jscherbe.github.io/frontend/scss/core/breakpoint/#function-get">get()</a></li></ul>',6),Ut={id:"function-string-replace",tabindex:"-1"},jt=t("a",{class:"header-anchor",href:"#function-string-replace","aria-label":'Permalink to "string-replace() <Badge text="function" type="tip" vertical="top" />  {#function-string-replace}"'},"​",-1),Ht=t("p",null,"Replaces all or one occurence of a string within a string",-1),Ot=t("ul",null,[t("li",null,[t("strong",null,"File:"),e(" _utils.scss")]),t("li",null,[t("strong",null,"Group:"),e(" utils")]),t("li",null,[t("strong",null,"Type:"),e(" function")]),t("li",null,[t("strong",null,"Lines (comments):"),e(" 204-208")]),t("li",null,[t("strong",null,"Lines (code):"),e(" 210-226")])],-1),Jt=s('<h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">$string</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">String to operate on</td></tr><tr><td style="text-align:left;">$find</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">String to find within string</td></tr><tr><td style="text-align:left;">$replace</td><td style="text-align:left;"><code>String</code></td><td style="text-align:left;">String to replace found strings</td></tr><tr><td style="text-align:left;">$all</td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;">Default true replace all matches, if false replace only first</td></tr></tbody></table>',2);function Qt(o,r,Wt,zt,Kt,Xt){const a=u("Badge"),i=u("SassdocDetails");return f(),g("div",null,[_,y,t("h3",x,[e("$config "),l(a,{text:"variable",type:"tip",vertical:"top"}),l(a,{text:"Map",type:"warning",vertical:"top"}),e(),b]),T,l(i,{summaryText:"Meta Information"},{default:n(()=>[q]),_:1}),P,t("h3",v,[e("set() "),l(a,{text:"mixin",type:"tip",vertical:"top"}),e(),k]),C,l(i,{summaryText:"Meta Information"},{default:n(()=>[S]),_:1}),E,t("h3",w,[e("require-list-has() "),l(a,{text:"mixin",type:"tip",vertical:"top"}),e(),A]),N,l(i,{summaryText:"Meta Information"},{default:n(()=>[D]),_:1}),R,t("h3",I,[e("require-list-contains() "),l(a,{text:"mixin",type:"tip",vertical:"top"}),e(),B]),$,l(i,{summaryText:"Meta Information"},{default:n(()=>[L]),_:1}),F,t("h3",M,[e("file-header() "),l(a,{text:"mixin",type:"tip",vertical:"top"}),e(),V]),G,l(i,{summaryText:"Meta Information"},{default:n(()=>[U]),_:1}),j,t("h3",H,[e("get() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),O]),J,l(i,{summaryText:"Meta Information"},{default:n(()=>[Q]),_:1}),W,t("h3",z,[e("require-map-get() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),K]),X,Y,l(i,{summaryText:"Meta Information"},{default:n(()=>[Z]),_:1}),tt,t("h3",et,[e("included() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),lt]),at,l(i,{summaryText:"Meta Information"},{default:n(()=>[it]),_:1}),nt,t("h3",st,[e("if-type() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),ot]),l(i,{summaryText:"Meta Information"},{default:n(()=>[rt]),_:1}),ut,t("h3",dt,[e("number-info() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),ct]),l(i,{summaryText:"Meta Information"},{default:n(()=>[ht]),_:1}),pt,t("h3",ft,[e("map-merge() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),gt]),mt,l(i,{summaryText:"Meta Information"},{default:n(()=>[_t]),_:1}),yt,t("h3",xt,[e("map-merge-or-overwrite() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),bt]),Tt,qt,l(i,{summaryText:"Meta Information"},{default:n(()=>[Pt]),_:1}),vt,kt,t("h3",Ct,[e("fallback() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),St]),Et,l(i,{summaryText:"Meta Information"},{default:n(()=>[wt]),_:1}),At,t("h3",Nt,[e("map-fallback() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),Dt]),Rt,l(i,{summaryText:"Meta Information"},{default:n(()=>[It]),_:1}),Bt,$t,t("h3",Lt,[e("function-fallback() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),Ft]),Mt,l(i,{summaryText:"Meta Information"},{default:n(()=>[Vt]),_:1}),Gt,t("h3",Ut,[e("string-replace() "),l(a,{text:"function",type:"tip",vertical:"top"}),e(),jt]),Ht,l(i,{summaryText:"Meta Information"},{default:n(()=>[Ot]),_:1}),Jt])}const ee=p(m,[["render",Qt]]);export{te as __pageData,ee as default};
