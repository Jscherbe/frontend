
# Selector



## Variables




### $config <badge text="variable" type="tip" vertical="top" />  {#variable-config} 

  

Module Settings
- This module can be used for dynamic classnames (used in base and some components). Some components selectors are too complex or coupled for dynamic classnames. 
    
    

<SassdocDetails summary="Meta Information">

- **File:** _selector.scss
- **Group:** selector
- **Type:** variable
- **Lines (comment range):** 8-12
- **Lines (code):** 14-16


</SassdocDetails>
  

#### Map Properties


|Name|Type|Description|
|:--|:--|:--|
|$config.prefix|`String`|Global prefix for selectors (would be used for classname prefix for example)|

    

#### Todos

- See about documenting when a component doesn't run through the selecotr module to get it's base classname
    
  

## Mixins




### set() <badge text="mixin" type="tip" vertical="top" />  {#mixin-set} 

  

Change modules $config
    
    

<SassdocDetails summary="Meta Information">

- **File:** _selector.scss
- **Group:** selector
- **Type:** mixin
- **Lines (comment range):** 21-24
- **Lines (code):** 25-27


</SassdocDetails>
  

#### Examples

General example, replace module-name with module's name      


``` scss
@include module-name.set(( "property" : value ));
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$changes|`Map`|Map of changes|

    

#### Require

- [$config](/sass/base/#variable-config)
  


### set-class-overrides() <badge text="mixin" type="tip" vertical="top" />  {#mixin-set-class-overrides} 

  

Set the class selector overrides
    
    

<SassdocDetails summary="Meta Information">

- **File:** _selector.scss
- **Group:** selector
- **Type:** mixin
- **Lines (comment range):** 38-39
- **Lines (code):** 41-43


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$changes|`Map`|Changes to merge|

    
  

## Functions




### get() <badge text="function" type="tip" vertical="top" />  {#function-get} 

  

Get a config option
    
    

<SassdocDetails summary="Meta Information">

- **File:** _selector.scss
- **Group:** selector
- **Type:** function
- **Lines (comment range):** 29-32
- **Lines (code):** 34-36


</SassdocDetails>
  

#### Examples

General example, replace module-name with module's name      


``` scss
@include module-name.get("property");
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$name|`Map`|Name of property|

    

#### Require

- [require-map-get()](undefined)
- [$config](/sass/base/#variable-config)
  


### class() <badge text="function" type="tip" vertical="top" />  {#function-class} 

  

Used to allow global prefixing of classes, and also the ability to 
Change a class used in the system (ie. like a component for example)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _selector.scss
- **Group:** selector
- **Type:** function
- **Lines (comment range):** 45-47
- **Lines (code):** 49-52


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$class|`String`|The classname to set|

    

#### Require

- [get()](/sass/base/#function-get)
  
  

<script>
console.log([{"groupName":"selector","id":"variable-config","uid":"selector-variable-config","title":"$config","groupPath":"/sass/selector/","path":"/sass/selector/#variable-config","previews":[]},{"groupName":"selector","id":"mixin-set","uid":"selector-mixin-set","title":"set()","groupPath":"/sass/selector/","path":"/sass/selector/#mixin-set","previews":[null]},{"groupName":"selector","id":"function-get","uid":"selector-function-get","title":"get()","groupPath":"/sass/selector/","path":"/sass/selector/#function-get","previews":[null]},{"groupName":"selector","id":"mixin-set-class-overrides","uid":"selector-mixin-set-class-overrides","title":"set-class-overrides()","groupPath":"/sass/selector/","path":"/sass/selector/#mixin-set-class-overrides","previews":[]},{"groupName":"selector","id":"function-class","uid":"selector-function-class","title":"class()","groupPath":"/sass/selector/","path":"/sass/selector/#function-class","previews":[]}]);
const sassdocGroup = [{"groupName":"selector","id":"variable-config","uid":"selector-variable-config","title":"$config","groupPath":"/sass/selector/","path":"/sass/selector/#variable-config","previews":[]},{"groupName":"selector","id":"mixin-set","uid":"selector-mixin-set","title":"set()","groupPath":"/sass/selector/","path":"/sass/selector/#mixin-set","previews":[null]},{"groupName":"selector","id":"function-get","uid":"selector-function-get","title":"get()","groupPath":"/sass/selector/","path":"/sass/selector/#function-get","previews":[null]},{"groupName":"selector","id":"mixin-set-class-overrides","uid":"selector-mixin-set-class-overrides","title":"set-class-overrides()","groupPath":"/sass/selector/","path":"/sass/selector/#mixin-set-class-overrides","previews":[]},{"groupName":"selector","id":"function-class","uid":"selector-function-class","title":"class()","groupPath":"/sass/selector/","path":"/sass/selector/#function-class","previews":[]}];
export default {
  sassdocGroup,
  provide: {
    getSassdocItem(uid) {
      return sassdocGroup.find(item => item._uid === uid);
    },
    getSassdocGroup() {
      return sassdocGroup;
    }
  }
}
</script> 
  
  