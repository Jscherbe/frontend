
# Utils



## Variables




### $test <badge text="variable" type="tip" vertical="top" /><badge text="Boolean" type="warn" vertical="top" />  {#variable-test} 


  

Test
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** variable
- **Lines (comment range):** 10-11
- **Lines (code):** 12-12


</SassdocDetails>
  


### $config <badge text="variable" type="tip" vertical="top" /><badge text="Map" type="warn" vertical="top" />  {#variable-config-12} 


  

Module Settings
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** variable
- **Lines (comment range):** 14-17
- **Lines (code):** 19-22


</SassdocDetails>
  

#### Map Properties


|Name|Type|Description|
|:--|:--|:--|
|$config.debug-maps|`Boolean`|Debugs include map print outs|
|$config.file-header-comments|`Boolean`|Remove comment headers if you'd like|

    
  

## Mixins




### set() <badge text="mixin" type="tip" vertical="top" />  {#mixin-set-14} 


  

Change modules $config
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** mixin
- **Lines (comment range):** 24-27
- **Lines (code):** 28-30


</SassdocDetails>
  

#### Examples

General example, replace module-name with module's name      


``` scss
@include module-name.set(( "property" : value ));
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$changes|`Map`|Map of changes|

    


### require-list-has() <badge text="mixin" type="tip" vertical="top" />  {#mixin-require-list-has} 


  

Ensure a value is present in the list, throw an error if not found
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** mixin
- **Lines (comment range):** 60-63
- **Lines (code):** 65-70


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$list|`List`|The map to get the value from|
|$value|`String`|The value to search for in the list|
|$context|`String`|The context of using this function for debugging help|

    


### require-list-contains() <badge text="mixin" type="tip" vertical="top" />  {#mixin-require-list-contains} 


  

Require that the list only is only made up of allowed items
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** mixin
- **Lines (comment range):** 72-74
- **Lines (code):** 76-80


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$allowed|`List`|The list of allowed items|
|$list|`String`|The list to test allowed against|

    


### file-header() <badge text="mixin" type="tip" vertical="top" />  {#mixin-file-header} 


  

Returns true if we should include something (used for output checking)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** mixin
- **Lines (comment range):** 91-93
- **Lines (code):** 95-103


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$context|`List`|The root area of the framework this file comes from|
|$name|`List`|The name of the specific area/file (optional)|

    
  

## Functions




### get() <badge text="function" type="tip" vertical="top" />  {#function-get-13} 


  

Get a config option
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 32-35
- **Lines (code):** 37-39


</SassdocDetails>
  

#### Examples

General example, replace module-name with module's name      


``` scss
@include module-name.get("property");
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$name|`Map`|Name of property|

    


### require-map-get() <badge text="function" type="tip" vertical="top" />  {#function-require-map-get} 


  

Get a required value from a map, throw an error if not found
- Remeber that that maps cannot intentionally use null (use false instead, if trying to avoid output if unconfigured)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 41-46
- **Lines (code):** 48-58


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$map|`Map`|The map to get the value from|
|$key|`String`|The key in the map to get value from|
|$context|`String`|The context of using this function for debugging help|

    

#### Returns


|Type|Description|
|:--|:--|
|`*`|The value from the map|

    


### included() <badge text="function" type="tip" vertical="top" />  {#function-included} 


  

Returns true if we should include something (map of booleans)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 82-84
- **Lines (code):** 86-89


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$name|`String`|Name of item to see if it's included|
|$includes|`Map`|Map of includes|

    


### if-type() <badge text="function" type="tip" vertical="top" />  {#function-if-type} 


  

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 106-108
- **Lines (code):** 110-116


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$type|`String`|type of value it should be|
|$value|`String`|the value to provide if it is that type|
|$fallback|`String`|the fallback value|

    


### number-info() <badge text="function" type="tip" vertical="top" />  {#function-number-info} 


  

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 119-120
- **Lines (code):** 122-136


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$number|`String`|Number to get meta info for|

    

#### Returns


|Type|Description|
|:--|:--|
|`Map`|With properties (unit, value)|

    


### map-merge-or-overwrite() <badge text="function" type="tip" vertical="top" />  {#function-map-merge-or-overwrite} 


  

Repeatable pattern in core
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 138-138
- **Lines (code):** 140-148


</SassdocDetails>
  


### function-fallback() <badge text="function" type="tip" vertical="top" />  {#function-function-fallback} 


  

Helps in providing a dynamic fallback for modules whose defaults should come from another
    
    

<SassdocDetails summary="Meta Information">

- **File:** _utils.scss
- **Group:** utils
- **Type:** function
- **Lines (comment range):** 150-154
- **Lines (code):** 156-165


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$prop|`String`|Property trying to get fallback for|
|$value|`*`|The value that may need the fallback|
|$lookup|`Map`|Map of properties to functions (use sass:meta > meta.get-function to populate)|

    

#### Returns


|Type|Description|
|:--|:--|
|`*`|The user's original value, or if the value is true get the default value from the provided function|

    
  

<script>
console.log([{"_uid":"utils-variable-test","_hash":"variable-test","_path":"/sass/utils/#variable-test","_previews":[]},{"_uid":"utils-variable-config","_hash":"variable-config-12","_path":"/sass/utils/#variable-config-12","_previews":[]},{"_uid":"utils-mixin-set","_hash":"mixin-set-14","_path":"/sass/utils/#mixin-set-14","_previews":[null]},{"_uid":"utils-function-get","_hash":"function-get-13","_path":"/sass/utils/#function-get-13","_previews":[null]},{"_uid":"utils-function-require-map-get","_hash":"function-require-map-get","_path":"/sass/utils/#function-require-map-get","_previews":[]},{"_uid":"utils-mixin-require-list-has","_hash":"mixin-require-list-has","_path":"/sass/utils/#mixin-require-list-has","_previews":[]},{"_uid":"utils-mixin-require-list-contains","_hash":"mixin-require-list-contains","_path":"/sass/utils/#mixin-require-list-contains","_previews":[]},{"_uid":"utils-function-included","_hash":"function-included","_path":"/sass/utils/#function-included","_previews":[]},{"_uid":"utils-mixin-file-header","_hash":"mixin-file-header","_path":"/sass/utils/#mixin-file-header","_previews":[]},{"_uid":"utils-function-if-type","_hash":"function-if-type","_path":"/sass/utils/#function-if-type","_previews":[]},{"_uid":"utils-function-number-info","_hash":"function-number-info","_path":"/sass/utils/#function-number-info","_previews":[]},{"_uid":"utils-function-map-merge-or-overwrite","_hash":"function-map-merge-or-overwrite","_path":"/sass/utils/#function-map-merge-or-overwrite","_previews":[]},{"_uid":"utils-function-function-fallback","_hash":"function-function-fallback","_path":"/sass/utils/#function-function-fallback","_previews":[]}]);
const sassdocGroup = [{"_uid":"utils-variable-test","_hash":"variable-test","_path":"/sass/utils/#variable-test","_previews":[]},{"_uid":"utils-variable-config","_hash":"variable-config-12","_path":"/sass/utils/#variable-config-12","_previews":[]},{"_uid":"utils-mixin-set","_hash":"mixin-set-14","_path":"/sass/utils/#mixin-set-14","_previews":[null]},{"_uid":"utils-function-get","_hash":"function-get-13","_path":"/sass/utils/#function-get-13","_previews":[null]},{"_uid":"utils-function-require-map-get","_hash":"function-require-map-get","_path":"/sass/utils/#function-require-map-get","_previews":[]},{"_uid":"utils-mixin-require-list-has","_hash":"mixin-require-list-has","_path":"/sass/utils/#mixin-require-list-has","_previews":[]},{"_uid":"utils-mixin-require-list-contains","_hash":"mixin-require-list-contains","_path":"/sass/utils/#mixin-require-list-contains","_previews":[]},{"_uid":"utils-function-included","_hash":"function-included","_path":"/sass/utils/#function-included","_previews":[]},{"_uid":"utils-mixin-file-header","_hash":"mixin-file-header","_path":"/sass/utils/#mixin-file-header","_previews":[]},{"_uid":"utils-function-if-type","_hash":"function-if-type","_path":"/sass/utils/#function-if-type","_previews":[]},{"_uid":"utils-function-number-info","_hash":"function-number-info","_path":"/sass/utils/#function-number-info","_previews":[]},{"_uid":"utils-function-map-merge-or-overwrite","_hash":"function-map-merge-or-overwrite","_path":"/sass/utils/#function-map-merge-or-overwrite","_previews":[]},{"_uid":"utils-function-function-fallback","_hash":"function-function-fallback","_path":"/sass/utils/#function-function-fallback","_previews":[]}];
export default {
  sassdocGroup,
  provide: {
    getSassdocItem(uid) {
      return sassdocGroup.find(item => item._uid === uid);
    },
    getSassdocGroup() {
      return sassdocGroup;
    }
  }
}
</script> 
  
  