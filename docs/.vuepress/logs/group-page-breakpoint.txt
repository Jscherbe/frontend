
# Breakpoint



## Variables




### $config <badge text="variable" type="tip" vertical="top" /><badge text="Map" type="warn" vertical="top" />  {#variable-config-1} 


  

Module Settings
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** variable
- **Lines (comment range):** 9-14
- **Lines (code):** 16-21


</SassdocDetails>
  

#### Map Properties


|Name|Type|Description|
|:--|:--|:--|
|$config.base|`Number`|Assumed pixel base, can change based on users font settings so this is just o get us in the ballpark). Note this is not the base font size but the user agent's or user's browser preferernce. This number is just being used for calculating estimated em sizes from average base. Since pixels are easier to understand but since we allow the user to set their font size. All of our css is relative to that, including most of the layout (rems, other relative units)|
|$config.gap|`Number`|The amount to offset min from max media queries incase you are using both (ie prevent overlap)|
|$config.null-name|`String`|The name of the space from 0 to the first breakpoint (doesn't really matter) used when passing breakpoints to JS via content property|
|$config.default|`String`|the name of the breakpont that is considered the major change (ie desktop to mobile) used by other modules/components|

    


### $sizes <badge text="variable" type="tip" vertical="top" /><badge text="Map" type="warn" vertical="top" />  {#variable-sizes} 


  

The default breakpoint sizes (targets are not precise, using em's)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** variable
- **Lines (comment range):** 39-40
- **Lines (code):** 42-46


</SassdocDetails>
  
  

## Mixins




### set() <badge text="mixin" type="tip" vertical="top" />  {#mixin-set-1} 


  

Change modules $config
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 23-25
- **Lines (code):** 26-28


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$changes|`Map`|Map of changes
  @include module-name.set(( "property" : value ));|

    


### set() <badge text="mixin" type="tip" vertical="top" />  {#mixin-set-2} 


  

Update the breakpoint sizes map
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 48-54
- **Lines (code):** 56-58


</SassdocDetails>
  

#### Examples

Changing the medium breakpoint and adding jumbo      


``` scss
@include breakpoints.set((
  "medium" : 50em,
  "jumbo" : 100em
));
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$changes|`Map`|A map to merge into the breakpoints map|

    


### min() <badge text="mixin" type="tip" vertical="top" />  {#mixin-min} 


  

Create a media query that matches the min-width for a given size
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 65-70
- **Lines (code):** 72-78


</SassdocDetails>
  

#### Examples

      


``` scss
@include breakpoints.min("small") {
  // Your styles
}
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$size|`Number`|The name of the breakpoint bsize|

    


### max() <badge text="mixin" type="tip" vertical="top" />  {#mixin-max} 


  

Create a media query that matches the max-width for a given size
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 80-85
- **Lines (code):** 87-93


</SassdocDetails>
  

#### Examples

      


``` scss
@include breakpoints.max("medium") {
  // Your styles
}
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$size|`Number`|The name of the breakpoint size|

    


### min-max() <badge text="mixin" type="tip" vertical="top" />  {#mixin-min-max} 


  

Create a media query that matches the min-width and max-width sizes
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 95-100
- **Lines (code):** 102-109


</SassdocDetails>
  

#### Examples

      


``` scss
@include breakpoints.min-max("small", "medium") {
  // Your styles
}
```
  
      

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$size|`Number`|The name of the breakpoint size|

    


### embed-for-scripts() <badge text="mixin" type="tip" vertical="top" />  {#mixin-embed-for-scripts} 


  

Attaches breakpoints to an element psuedo content for access via script
Use with ulu/js/breakpoints. Breakpoints always min-width (upwards)
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** mixin
- **Lines (comment range):** 126-127
- **Lines (code):** 129-139


</SassdocDetails>
  
  

## Functions




### get() <badge text="function" type="tip" vertical="top" />  {#function-get-1} 


  

Get a config option
    
    

<SassdocDetails summary="Meta Information">

- **File:** _breakpoint.scss
- **Group:** breakpoint
- **Type:** function
- **Lines (comment range):** 30-32
- **Lines (code):** 34-36


</SassdocDetails>
  

#### Parameters


|Name|Type|Description|
|:--|:--|:--|
|$name|`Map`|Name of property
  @include module-name.get("property");|

    
  

<script>
console.log([{"_uid":"breakpoint-variable-config","_hash":"variable-config-1","_path":"/sass/breakpoint/#variable-config-1","_previews":[]},{"_uid":"breakpoint-mixin-set","_hash":"mixin-set-1","_path":"/sass/breakpoint/#mixin-set-1","_previews":[]},{"_uid":"breakpoint-function-get","_hash":"function-get-1","_path":"/sass/breakpoint/#function-get-1","_previews":[]},{"_uid":"breakpoint-variable-sizes","_hash":"variable-sizes","_path":"/sass/breakpoint/#variable-sizes","_previews":[]},{"_uid":"breakpoint-mixin-set-1","_hash":"mixin-set-2","_path":"/sass/breakpoint/#mixin-set-2","_previews":[null]},{"_uid":"breakpoint-mixin-min","_hash":"mixin-min","_path":"/sass/breakpoint/#mixin-min","_previews":[null]},{"_uid":"breakpoint-mixin-max","_hash":"mixin-max","_path":"/sass/breakpoint/#mixin-max","_previews":[null]},{"_uid":"breakpoint-mixin-min-max","_hash":"mixin-min-max","_path":"/sass/breakpoint/#mixin-min-max","_previews":[null]},{"_uid":"breakpoint-mixin-embed-for-scripts","_hash":"mixin-embed-for-scripts","_path":"/sass/breakpoint/#mixin-embed-for-scripts","_previews":[]}]);
const sassdocGroup = [{"_uid":"breakpoint-variable-config","_hash":"variable-config-1","_path":"/sass/breakpoint/#variable-config-1","_previews":[]},{"_uid":"breakpoint-mixin-set","_hash":"mixin-set-1","_path":"/sass/breakpoint/#mixin-set-1","_previews":[]},{"_uid":"breakpoint-function-get","_hash":"function-get-1","_path":"/sass/breakpoint/#function-get-1","_previews":[]},{"_uid":"breakpoint-variable-sizes","_hash":"variable-sizes","_path":"/sass/breakpoint/#variable-sizes","_previews":[]},{"_uid":"breakpoint-mixin-set-1","_hash":"mixin-set-2","_path":"/sass/breakpoint/#mixin-set-2","_previews":[null]},{"_uid":"breakpoint-mixin-min","_hash":"mixin-min","_path":"/sass/breakpoint/#mixin-min","_previews":[null]},{"_uid":"breakpoint-mixin-max","_hash":"mixin-max","_path":"/sass/breakpoint/#mixin-max","_previews":[null]},{"_uid":"breakpoint-mixin-min-max","_hash":"mixin-min-max","_path":"/sass/breakpoint/#mixin-min-max","_previews":[null]},{"_uid":"breakpoint-mixin-embed-for-scripts","_hash":"mixin-embed-for-scripts","_path":"/sass/breakpoint/#mixin-embed-for-scripts","_previews":[]}];
export default {
  sassdocGroup,
  provide: {
    getSassdocItem(uid) {
      return sassdocGroup.find(item => item._uid === uid);
    },
    getSassdocGroup() {
      return sassdocGroup;
    }
  }
}
</script> 
  
  