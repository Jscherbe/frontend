(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{404:function(e,t,n){"use strict";n.r(t);var a={sassdocGroup:{mixins:[{description:"Change modules $config\n",context:{type:"mixin",name:"set",code:"\n  $config: map.merge($config, $changes) !global;\n",line:{start:96,end:98}},parameter:[{type:"Map",name:"changes",description:"Map of changes"}],example:[{type:"scss",code:'@include module-name.set(( "property" : value ));',description:"General example, replace module-name with module's name"}],group:["button"],require:[{type:"variable",name:"config",autofill:!0,item:"base--variable--config"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"_button.scss",name:"_button.scss"},_uid:"button--mixin--set"}],variables:[{description:"Module Settings\n",context:{type:"variable",name:"config",value:'(\n  "padding":                 (0.75em 1.5em),\n  "background-color":        color.tint(black, 30%),\n  "background-color-hover": black,\n  "font-family":             inherit,\n  "font-weight":             bold,\n  "line-height":             1.1,\n  "letter-spacing":          0.02em,\n  "text-transform":          uppercase,\n  "text-shadow":             none,\n  "font-size":               "base",\n  "color":                   white,\n  "color-hover":            white,\n  "box-shadow":              true,\n  "border-radius":           2rem,\n  "border-width":            0,\n  "border-color":            transparent,\n  "border-color-hover":     transparent,\n  "margin":                  (0.45em 0.5em 0.45em 0),\n  "min-width":               9rem,\n  "icon-size":               2.5rem,\n  "icon-font-size":          1.38rem,\n  "icon-border-radius":      50%\n)',scope:"default",line:{start:23,end:46}},type:"Map",group:["button"],file:{path:"_button.scss",name:"_button.scss"},_uid:"button--variable--config"},{description:"Button sizes\n",context:{type:"variable",name:"sizes",value:'(\n  "small" : (\n    "padding":        (0.35em 1.5em),\n    "min-width":      0,\n    "icon-size":      2rem,\n    "icon-font-size": 1rem\n  ),\n  "large" : (\n    "padding":   (1em 2em),\n    "min-width": 11rem,\n    "icon-size": 3.5rem\n  )\n)',scope:"default",line:{start:51,end:63}},type:"Map",group:["button"],file:{path:"_button.scss",name:"_button.scss"},_uid:"button--variable--sizes"},{description:"Button styles\n",context:{type:"variable",name:"styles",value:'(\n  "transparent" : (\n    "background-color" : transparent,\n    "color" : "type",\n    "border-color" : transparent,\n    "box-shadow" : none,\n    "hover" : (\n      "background-color" : "white",\n      "color" : inherit,\n      "border-color" : transparent,\n    )\n  ),\n  "outline" : (\n    "background-color" : transparent,\n    "color" : "type",\n    "border-color" : "rule",\n    "box-shadow" : none,\n    "hover" : (\n      "background-color" : "white",\n    )\n  ),\n)',scope:"default",line:{start:68,end:89}},type:"Map",group:["button"],file:{path:"_button.scss",name:"_button.scss"},usedBy:["components--mixin--component-button-styles"],_uid:"button--variable--styles"}],functions:[{description:"Get a config option\n",context:{type:"function",name:"get",code:'\n  $value: utils.require-map-get($config, $name, "button [config]");\n  @return utils.function-fallback($name, $value, $-fallbacks);\n',line:{start:105,end:109}},parameter:[{type:"Map",name:"name",description:"Name of property"}],example:[{type:"scss",code:'@include module-name.get("property");',description:"General example, replace module-name with module's name"}],group:["button"],require:[{type:"function",name:"require-map-get",autofill:!0,item:"utils--function--require-map-get"},{type:"function",name:"function-fallback",autofill:!0,item:"utils--function--function-fallback"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"_button.scss",name:"_button.scss"},_uid:"button--function--get"}],placeholders:[]}},s=n(24),o=Object(s.a)(a,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"button"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#button"}},[e._v("#")]),e._v(" Button")]),e._v(" "),n("h2",{attrs:{id:"mixins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[e._v("#")]),e._v(" Mixins")]),e._v(" "),n("h3",{attrs:{id:"set"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" set()")]),e._v(" "),n("p",[e._v("Change modules $config")]),e._v(" "),n("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[0]}}),e._v(" "),n("h2",{attrs:{id:"variables"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),n("h3",{attrs:{id:"config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" $config")]),e._v(" "),n("p",[e._v("Module Settings")]),e._v(" "),n("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[0]}}),e._v(" "),n("h3",{attrs:{id:"sizes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sizes"}},[e._v("#")]),e._v(" $sizes")]),e._v(" "),n("p",[e._v("Button sizes")]),e._v(" "),n("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[1]}}),e._v(" "),n("h3",{attrs:{id:"styles"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#styles"}},[e._v("#")]),e._v(" $styles")]),e._v(" "),n("p",[e._v("Button styles")]),e._v(" "),n("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[2]}}),e._v(" "),n("h2",{attrs:{id:"functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),n("h3",{attrs:{id:"get"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" get()")]),e._v(" "),n("p",[e._v("Get a config option")]),e._v(" "),n("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[0]}}),e._v(" "),n("h2",{attrs:{id:"placeholders"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#placeholders"}},[e._v("#")]),e._v(" Placeholders")])],1)}),[],!1,null,null,null);t.default=o.exports}}]);