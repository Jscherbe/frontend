(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{402:function(e,n,t){"use strict";t.r(n);var s={sassdocGroup:{mixins:[{description:"Prints color-context styles as base classes (top of stylesheet)\n",context:{type:"mixin",name:"styles",code:"\n  @include utils.file-header('base', 'color');\n  @include color.all-context-styles(\"base-class\");\n",line:{start:10,end:13}},group:["base"],require:[],file:{path:"base/_color.scss",name:"_color.scss"},_uid:"base--mixin--styles"},{description:"Change modules $config\n",context:{type:"mixin",name:"set",code:"\n  $config: map.merge($config, $changes) !global;\n",line:{start:27,end:29}},parameter:[{type:"Map",name:"changes",description:"Map of changes"}],example:[{type:"scss",code:'@include module-name.set(( "property" : value ));',description:"General example, replace module-name with module's name"}],group:["base"],require:[{type:"variable",name:"config",autofill:!0,item:"base--variable--config"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"base/_elements.scss",name:"_elements.scss"},_uid:"base--mixin--set"},{description:"Prints elements base styles\n",context:{type:"mixin",name:"base-elements-styles",code:'\n\n  @include utils.file-header(\'base\', \'elements\');\n\n  *,\n  ::before,\n  ::after {\n    box-sizing: border-box;\n  }\n  html {\n    -webkit-text-size-adjust: 100%;\n    @media (prefers-reduced-motion: no-preference) {\n      scroll-behavior: smooth;\n    }\n  }\n  body {\n    color: color.get(\'type\');\n    background-color: white;\n    font-family: typography.get("font-family");\n    margin: 0;\n    // Note we are using relative units here instead of setting a \n    // pixel base like we use to on the HTML\n    // This will allow the user preference in font size\n    // Useful for accessibility\n    @include typography.size("base");\n    @include breakpoint.embed-for-scripts();\n  }\n  h1, \n  h2, \n  h3, \n  h4, \n  h5, \n  h6, \n  ul, \n  ol, \n  li,\n  pre, \n  code,\n  p { \n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n    font-family: inherit;\n    border-width: 0;\n    border-style: solid;\n    font-weight: inherit;\n  }\n  p {\n    $margin-top: typography.get("margin-top");\n    margin-top: if($margin-top, $margin-top, 0);\n    margin-bottom: typography.get("margin-bottom"); \n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  small { \n    @include typography.size("small", ("line-height" : typography.get("line-height-dense"))); \n  }\n  sub { \n    bottom: -0.25em; \n  }\n  sup { \n    top: -0.5em; \n  }\n  b, \n  strong { \n    font-weight: bold; \n  }\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: typography.get("font-family-monospace");\n  }\n  hr {\n    height: 0;\n    border: 0;\n    box-sizing: content-box;\n    overflow: visible;\n    margin: element.get("margin") 0;\n    border-bottom: element.get-rule-style();\n  }\n  iframe {\n    border: 0;\n    outline: 0;\n  }\n  figure {\n    margin: 0;\n  }\n  img {\n    display: block;\n    width: auto;\n    height: auto;\n    max-width: 100%;\n    border-style: none;\n  }\n  // Not styling ordered lists because they are used in navigation and other UI components\n  ul { \n    list-style: none; \n  }\n  // Style ordered lists since we don\'t use them much in the UI components\n  ol {\n    @include element.styles-ordered-list();\n  }\n  \n  a {\n    @if (get("links-state-styling")) {\n      @include element.link();\n    } @else {\n      @include element.link-defaults();\n    }\n  }\n  // button,\n  // [type="button"],\n  // [type="reset"],\n  // [type="submit"] {\n  //   @include button.reset();\n  // }\n  // For accessible tabs\n  [role="tab"] {\n    cursor: pointer;\n  }\n  dt { \n    font-weight: bold;\n  }\n  [hidden], \n  template {\n    display: none;\n  }\n  blockquote {\n    margin: 0;\n  }\n',line:{start:45,end:180}},example:[{type:"scss",code:"@include ulu.base-elements-styles();"}],group:["base"],require:[{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get-rule-style",autofill:!0,item:"element--function--get-rule-style"},{type:"function",name:"get",autofill:!0,item:"base--function--get"}],file:{path:"base/_elements.scss",name:"_elements.scss"},_uid:"base--mixin--base-elements-styles"},{description:"Prints all Base styles\n",context:{type:"mixin",name:"base-styles",code:'\n  @include utils.file-header("base");\n  @if $includes {\n    @include utils.require-list-contains($-all-includes, $includes);\n    $-all-includes: map.merge($-all-includes, $includes) !global;\n  }\n  @if (map.get($-all-includes, "normalize")) {\n    @include normalize.styles;\n  }\n  @if (map.get($-all-includes, "elements")) {\n    @include elements.styles;\n  }\n  @if (map.get($-all-includes, "keyframes")) {\n    @include keyframes.styles;\n  }\n  @if (map.get( $-all-includes, "typography")) {\n    @include typography.styles;\n  }\n  @if (map.get($-all-includes, "color")) {\n    @include color.styles;\n  }\n  @if (map.get($-all-includes, "layout")) {\n    @include layout.styles;\n  }\n',line:{start:37,end:61}},parameter:[{type:"List",name:"includes",description:"A list of changes to this module's includes"}],example:[{type:"scss",code:"@include ulu.base-styles();"}],group:["base"],require:[{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"}],file:{path:"base/_index.scss",name:"_index.scss"},_uid:"base--mixin--base-styles"},{description:"Prints CSS keyframes\n",context:{type:"mixin",name:"base-keyframes-styles",code:"\n  @include utils.file-header('base', 'keyframes');\n  @keyframes fadeIn {\n    0% {\n      opacity: 0; \n    }\n    100% {\n      opacity: 1; \n    }\n  }\n  @keyframes FadeDownIn {\n    0% {\n      opacity: 0; \n      transform: translateY(-10px);\n    }\n    100%  {\n      opacity: 1; \n      transform: translateY(0);\n    }\n  }\n  @keyframes fadeInLeft {\n    0% {\n      opacity: 0; \n      transform: translatex(-10px);\n    }\n    100% {\n      opacity: 1; \n      transform: translatex(0);\n    }\n  }\n  @keyframes fadeInZoom {\n    // Delay\n    0% {\n      opacity: 0; \n      transform: scale(0);\n    }\n    // Start\n    50% {\n      opacity: 0; \n      transform: scale(0);\n    }\n    100%  {\n      opacity: 1; \n      transform: scale(1);\n    }\n  }\n  @keyframes rotate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100%  {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    from {\n      transform:rotate(0deg);\n    }\n    to {\n      transform:rotate(360deg);\n    }\n  }\n",line:{start:12,end:74}},example:[{type:"scss",code:"@include ulu.base-keyframes-styles();"}],group:["base"],require:[{type:"function",name:"scale",autofill:!0,item:"typography--function--scale"},{type:"function",name:"scale",autofill:!0,item:"typography--function--scale"},{type:"function",name:"scale",autofill:!0,item:"typography--function--scale"}],file:{path:"base/_keyframes.scss",name:"_keyframes.scss"},_uid:"base--mixin--base-keyframes-styles"},{description:"Prints the normalize stylesheet. We are using modern-normalize 1.1.0\n",context:{type:"mixin",name:"base-normalize-styles",code:"\n\n  @include utils.file-header('base', 'normalize');\n  \n  /*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n  /*\n  Document\n  ========\n  */\n\n  /**\n  Use a better box model (opinionated).\n  */\n\n  // *,\n  // ::before,\n  // ::after {\n  //   box-sizing: border-box;\n  // }\n\n  /**\n  Use a more readable tab size (opinionated).\n  */\n\n  html {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n\n  /**\n  1. Correct the line height in all browsers.\n  2. Prevent adjustments of font size after orientation changes in iOS.\n  */\n\n  // html {\n  //   line-height: 1.15; /* 1 */\n  //   -webkit-text-size-adjust: 100%; /* 2 */\n  // }\n\n  /*\n  Sections\n  ========\n  */\n\n  /**\n  Remove the margin in all browsers.\n  */\n\n  // body {\n  //   margin: 0;\n  // }\n\n  /**\n  Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n\n  // body {\n  //   font-family:\n  //     system-ui,\n  //     -apple-system, /* Firefox supports this but not yet `system-ui` */\n  //     'Segoe UI',\n  //     Roboto,\n  //     Helvetica,\n  //     Arial,\n  //     sans-serif,\n  //     'Apple Color Emoji',\n  //     'Segoe UI Emoji';\n  // }\n\n  /*\n  Grouping content\n  ================\n  */\n\n  /**\n  1. Add the correct height in Firefox.\n  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n  */\n\n  \n\n  /*\n  Text-level semantics\n  ====================\n  */\n\n  /**\n  Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n\n  /**\n  Add the correct font weight in Edge and Safari.\n  */\n\n  // b,\n  // strong {\n  //   font-weight: bolder;\n  // }\n\n  /**\n  1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  2. Correct the odd 'em' font sizing in all browsers.\n  */\n\n  // code,\n  // kbd,\n  // samp,\n  // pre {\n  //   font-family:\n  //     ui-monospace,\n  //     SFMono-Regular,\n  //     Consolas,\n  //     'Liberation Mono',\n  //     Menlo,\n  //     monospace; /* 1 */\n  //   font-size: 1em; /* 2 */\n  // }\n\n  /**\n  Add the correct font size in all browsers.\n  */\n\n  // small {\n  //   font-size: 80%;\n  // }\n\n  /**\n  Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n  */\n\n  // sub,\n  // sup {\n  //   font-size: 75%;\n  //   line-height: 0;\n  //   position: relative;\n  //   vertical-align: baseline;\n  // }\n\n  // sub {\n  //   bottom: -0.25em;\n  // }\n\n  // sup {\n  //   top: -0.5em;\n  // }\n\n  /*\n  Tabular data\n  ============\n  */\n\n  /**\n  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n  */\n\n  table {\n    text-indent: 0; /* 1 */\n    // border-color: inherit; /* 2 */\n  }\n\n  /*\n  Forms\n  =====\n  */\n\n  /**\n  1. Change the font styles in all browsers.\n  2. Remove the margin in Firefox and Safari.\n  */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    // font-size: 100%; /* 1 */\n    // line-height: 1.15; /* 1 */\n    line-height: inherit;\n    font-size: 1rem;\n    margin: 0; /* 2 */\n  }\n\n  /**\n  Remove the inheritance of text transform in Edge and Firefox.\n  1. Remove the inheritance of text transform in Firefox.\n  */\n\n  button,\n  select { /* 1 */\n    text-transform: none;\n  }\n\n  /**\n  Correct the inability to style clickable types in iOS and Safari.\n  */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    @include button.reset();\n  }\n\n  /**\n  Remove the inner border and padding in Firefox.\n  */\n\n  ::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n  Restore the focus styles unset by the previous rule.\n  */\n\n  :-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n  Remove the additional ':invalid' styles in Firefox.\n  See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n  */\n\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n\n  /**\n  Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n  */\n\n  legend {\n    padding: 0;\n  }\n\n  /**\n  Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n  Correct the cursor style of increment and decrement buttons in Safari.\n  */\n\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n  1. Correct the odd appearance in Chrome and Safari.\n  2. Correct the outline style in Safari.\n  */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n  Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n  1. Correct the inability to style clickable types in iOS and Safari.\n  2. Change font properties to 'inherit' in Safari.\n  */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /*\n  Interactive\n  ===========\n  */\n\n  /*\n  Add the correct display in Chrome and Safari.\n  */\n\n  summary {\n    display: list-item;\n  }\n",line:{start:15,end:316}},link:[{url:"https://www.npmjs.com/package/modern-normalize",caption:"Modern Normalize (NPM)"}],example:[{type:"scss",code:"@include ulu.base-normalize-styles();"}],group:["base"],require:[],file:{path:"base/_normalize.scss",name:"_normalize.scss"},_uid:"base--mixin--base-normalize-styles"},{description:"Prints elements base styles\n",context:{type:"mixin",name:"base-typography-styles",code:'\n\n  @include utils.file-header(\'base\', \'typography\');\n\n  $prefix: selector.class("type");\n\n  // Print base typographic sizes\n  @each $size, $values in typography.$sizes {\n    @if (map.get($values, "base-class")) {\n      @if (map.get($values, "base-class-prefixed")) {\n        #{ $prefix }-#{$size} {\n          @include typography.size($size);\n        }\n      } @else {\n        .#{$size} {\n          @include typography.size($size);\n        }\n      }\n    }\n  }\n',line:{start:22,end:42}},example:[{type:"scss",code:"@include ulu.base-typography-styles();"},{type:"raw",code:'<span class="h1">A</span>\n<span class="h2">A</span>\n<span class="h3">A</span>\n<span class="h4">A</span>\n<span class="h5">A</span>\n<span class="h6">A</span>',description:"Example of type size as base unprefixed"}],group:["base"],require:[{type:"function",name:"class",autofill:!0,item:"selector--function--class"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"variable",name:"sizes",autofill:!0,item:"breakpoint--variable--sizes"}],file:{path:"base/_typography.scss",name:"_typography.scss"},_uid:"base--mixin--base-typography-styles"}],variables:[{description:"Module Settings\n",context:{type:"variable",name:"config",value:'(\n  "links-state-styling" : false\n)',scope:"default",line:{start:19,end:21}},type:"Map",property:[{type:"Number",name:"$config.links-state-styling",description:"Just color/defaults vs hover/visited/active"}],group:["base"],file:{path:"base/_elements.scss",name:"_elements.scss"},usedBy:["base--mixin--set","base--mixin--set","base--function--get","breakpoint--mixin--set","breakpoint--mixin--set","breakpoint--function--get","button--mixin--set","button--mixin--set","button--function--get","calculate--mixin--set","calculate--mixin--set","calculate--function--get","components--mixin--set","components--mixin--set","components--function--get","element--mixin--set","element--mixin--set","element--function--get","grid--mixin--set","grid--mixin--set","grid--function--get","helpers--mixin--set","helpers--mixin--set","helpers--function--get","helpers--mixin--create-property-classes","helpers--mixin--create-property-classes","layout--mixin--set","layout--mixin--set","layout--function--get","selector--mixin--set","selector--mixin--set","selector--function--get","typography--mixin--set","typography--mixin--set","typography--function--get","units--mixin--set","units--mixin--set","units--function--get","utils--mixin--set","utils--mixin--set","utils--function--get"],_uid:"base--variable--config"}],functions:[{description:"Get a config option\n",context:{type:"function",name:"get",code:'\n  @return utils.require-map-get($config, $name, "element [config]");\n',line:{start:36,end:38}},parameter:[{type:"Map",name:"name",description:"Name of property"}],example:[{type:"scss",code:'@include module-name.get("property");',description:"General example, replace module-name with module's name"}],group:["base"],require:[{type:"function",name:"require-map-get",autofill:!0,item:"utils--function--require-map-get"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"base/_elements.scss",name:"_elements.scss"},usedBy:["base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-elements-styles","base--mixin--base-styles","base--mixin--base-styles","base--mixin--base-styles","base--mixin--base-styles","base--mixin--base-styles","base--mixin--base-styles","base--mixin--base-typography-styles","base--mixin--base-typography-styles","breakpoint--mixin--max","breakpoint--mixin--min-max","breakpoint--mixin--embed-for-scripts","color--function--get-context-value","color--function--get-context-value","color--mixin--context-styles","color--mixin--context-styles","color--function--tint","color--function--tint","color--function--shade","color--function--shade","color--mixin--all-context-styles","color--mixin--all-color-class-styles","components--mixin--component-button-styles","components--mixin--component-button-styles","components--mixin--component-button-styles","components--mixin--component-button-styles","components--mixin--component-button-styles","components--mixin--component-button-styles","components--mixin--component-styles","components--mixin--component-styles","components--mixin--component-styles","components--mixin--component-styles","components--mixin--component-styles","components--mixin--styles","components--mixin--styles","components--mixin--styles","components--mixin--styles","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link","element--mixin--link-defaults","element--mixin--link-defaults","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-ordered-list","element--mixin--styles-unordered-list","element--mixin--styles-unordered-list","element--mixin--styles-unordered-list","element--mixin--styles-unordered-list","element--mixin--styles-unordered-list","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","grid--mixin--create","helpers--mixin--helper-styles","helpers--mixin--helper-styles","helpers--mixin--helper-styles","helpers--mixin--helper-styles","helpers--mixin--helper-styles","helpers--mixin--helper-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--helper-typography-styles","helpers--mixin--create-property-classes","helpers--mixin--create-property-classes","helpers--mixin--create-property-classes","helpers--mixin--create-property-classes","helpers--mixin--create-property-classes","layout--mixin--match-container-padding","layout--mixin--match-container-padding","selector--function--class","selector--function--class","typography--function--scale","typography--function--scale","typography--function--scale","typography--function--scale-line-height","typography--function--scale-line-height","typography--function--scale-line-height","typography--function--rem","typography--function--em","typography--function--new-size","typography--function--font-size","typography--function--get-size-converted-value","typography--function--get-size-converted-value","typography--function--get-size-converted-value","typography--function--get-size-value","typography--function--get-size-value","typography--mixin--font-size-responsive","typography--mixin--size","typography--mixin--size","typography--mixin--size","typography--mixin--size","typography--mixin--size","utils--function--require-map-get","utils--function--require-map-get","utils--function--included","utils--function--function-fallback"],_uid:"base--function--get"}],placeholders:[]}},i=t(24),a=Object(i.a)(s,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"base"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base"}},[e._v("#")]),e._v(" Base")]),e._v(" "),t("h2",{attrs:{id:"mixins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[e._v("#")]),e._v(" Mixins")]),e._v(" "),t("h3",{attrs:{id:"styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#styles"}},[e._v("#")]),e._v(" styles()")]),e._v(" "),t("p",[e._v("Prints color-context styles as base classes (top of stylesheet)")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[0]}}),e._v(" "),t("h3",{attrs:{id:"set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" set()")]),e._v(" "),t("p",[e._v("Change modules $config")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[1]}}),e._v(" "),t("h3",{attrs:{id:"base-elements-styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base-elements-styles"}},[e._v("#")]),e._v(" base-elements-styles()")]),e._v(" "),t("p",[e._v("Prints elements base styles")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[2]}}),e._v(" "),t("h3",{attrs:{id:"base-styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base-styles"}},[e._v("#")]),e._v(" base-styles()")]),e._v(" "),t("p",[e._v("Prints all Base styles")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[3]}}),e._v(" "),t("h3",{attrs:{id:"base-keyframes-styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base-keyframes-styles"}},[e._v("#")]),e._v(" base-keyframes-styles()")]),e._v(" "),t("p",[e._v("Prints CSS keyframes")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[4]}}),e._v(" "),t("h3",{attrs:{id:"base-normalize-styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base-normalize-styles"}},[e._v("#")]),e._v(" base-normalize-styles()")]),e._v(" "),t("p",[e._v("Prints the normalize stylesheet. We are using modern-normalize 1.1.0")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[5]}}),e._v(" "),t("h3",{attrs:{id:"base-typography-styles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#base-typography-styles"}},[e._v("#")]),e._v(" base-typography-styles()")]),e._v(" "),t("p",[e._v("Prints elements base styles")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[6]}}),e._v(" "),t("h2",{attrs:{id:"variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),t("h3",{attrs:{id:"config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" $config")]),e._v(" "),t("p",[e._v("Module Settings")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[0]}}),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),t("h3",{attrs:{id:"get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" get()")]),e._v(" "),t("p",[e._v("Get a config option")]),e._v(" "),t("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[0]}}),e._v(" "),t("h2",{attrs:{id:"placeholders"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#placeholders"}},[e._v("#")]),e._v(" Placeholders")])],1)}),[],!1,null,null,null);n.default=a.exports}}]);