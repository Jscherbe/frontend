(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{406:function(e,t,o){"use strict";o.r(t);var a={sassdocGroup:{mixins:[{description:"Used to override or extend the color palette\n",context:{type:"mixin",name:"set",code:"\n  $palette: map.merge($palette, $changes) !global;\n",line:{start:64,end:66}},parameter:[{type:"Map",name:"changes",description:"A map to merge into the color palette"}],example:[{type:"scss",code:'@include color.set((\n  "type" : #444,\n  "error" : orange,\n));',description:"Setting the error and type color"}],group:["color"],require:[{type:"variable",name:"palette",autofill:!0,item:"color--variable--palette"},{type:"variable",name:"palette",autofill:!0,item:"color--variable--palette"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--mixin--set"},{description:"Set ouput classes for all-color-class-styles\n",context:{type:"mixin",name:"set-color-classes",code:"\n  $color-classes: map.merge($color-classes, $changes) !global;\n",line:{start:83,end:85}},parameter:[{type:"Map",name:"changes",description:"Map of changes (you can disable defaults this way)"}],group:["color"],require:[{type:"variable",name:"color-classes",autofill:!0,item:"color--variable--color-classes"},{type:"variable",name:"color-classes",autofill:!0,item:"color--variable--color-classes"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--mixin--set-color-classes"},{description:"Set color contexts\n",context:{type:"mixin",name:"set-contexts",code:"\n  $contexts: utils.map-merge-or-overwrite($contexts, $changes, $deep, $overwrite) !global;\n",line:{start:104,end:106}},parameter:[{type:"Map",name:"changes",description:"A map to merge"},{type:"Map",name:"deep",description:"Use deep merge"},{type:"Map",name:"overwrite",description:"Overwrite the completly (cannot be used with deep)"}],example:[{type:"scss",code:'@include color.set-contexts((\n  "dark" : (\n    "background-color" : red,\n    "color" : white,\n  )\n), false, true);',description:"Overwriting contexts"}],group:["color"],require:[{type:"function",name:"map-merge-or-overwrite",autofill:!0,item:"utils--function--map-merge-or-overwrite"},{type:"variable",name:"contexts",autofill:!0,item:"color--variable--contexts"},{type:"variable",name:"contexts",autofill:!0,item:"color--variable--contexts"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--mixin--set-contexts"},{description:"Prints contexts styles\n",context:{type:"mixin",name:"context-styles",code:'\n  $context: get-context($name);\n  background-color: get-context-value($name, "background-color");\n  background: map.get($context, "background"); // Allow gradients/images\n  background-image: map.get($context, "background-image"); // Allow gradients/images\n  color: get-context-value($name, "color");\n',line:{start:134,end:140}},parameter:[{type:"String",name:"name",description:"Name of context"}],group:["color"],require:[{type:"function",name:"get-context",autofill:!0,item:"color--function--get-context"},{type:"function",name:"get-context-value",autofill:!0,item:"color--function--get-context-value"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get-context-value",autofill:!0,item:"color--function--get-context-value"}],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--mixin--all-context-styles"],_uid:"color--mixin--context-styles"},{description:"Prints all context styles \n",context:{type:"mixin",name:"all-context-styles",code:'\n  $prefix: selector.class("color-context");\n  @each $name, $context in $contexts {\n    @if (not $with-prop or map.get($context, $with-prop)) {\n      #{ $prefix }-#{ $name } {\n        @include context-styles($name);\n      }\n    }\n  }\n',line:{start:172,end:181}},parameter:[{type:"String",name:"with-prop",description:"Checks the specific context for a certain prop (has to be truthy)(used for output in helper/base color modules)"}],example:[{type:"scss",code:"@include ulu.all-context-styles();"},{type:"raw",code:' <div class="color-context-dark" style="padding: 1rem">\n  Some text in dark context\n</div>',description:"Example of a color-context"}],group:["color"],require:[{type:"mixin",name:"context-styles",autofill:!0,item:"color--mixin--context-styles"},{type:"function",name:"class",autofill:!0,item:"selector--function--class"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"variable",name:"contexts",autofill:!0,item:"color--variable--contexts"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--mixin--all-context-styles"},{description:"Outputs all color classes\n",context:{type:"mixin",name:"all-color-class-styles",code:'\n  $prefix: selector.class("color");\n  @each $name, $output in $color-classes {\n    @if ($output) {\n      #{ $prefix }-#{ $name } {\n        color: get($name);\n      }\n    }\n  }\n',line:{start:188,end:197}},example:[{type:"scss",code:"@include ulu.all-color-class-styles();"},{type:"raw",code:'<span class="color-name">Some text</span>',description:"Example of a color-context"}],group:["color"],require:[{type:"function",name:"class",autofill:!0,item:"selector--function--class"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"variable",name:"color-classes",autofill:!0,item:"color--variable--color-classes"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--mixin--all-color-class-styles"}],variables:[{description:"The color palette map, can be extended or modified with set() and accessed with get()\n",context:{type:"variable",name:"palette",value:'(\n  "black":        black,\n  "white":        white,\n  "type":         black,\n  "focus":        blue,\n  "error":        red,\n  "accent":       orange,\n  "box-shadow":   rgba(0, 0, 0, 0.349),\n  "rule":         gray,\n  "rule-light":   lightgray,\n  "link":         blue,\n  "link:hover":   darkblue,\n  "link:active":  darkblue,\n  "link:visited": purple,\n  "bullet":       inherit\n)',scope:"default",line:{start:13,end:28}},type:"map",group:["color"],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--mixin--set","color--mixin--set","color--function--get"],_uid:"color--variable--palette"},{description:"Pairs of background-color and color definitions\n",context:{type:"variable",name:"contexts",value:'(\n  "dark" : (\n    "background-color" : "black",\n    "color" : "white",\n    "base-class" : true\n  ),\n  "light" : (\n    "background-color" : "white",\n    "color" : "black",\n    "base-class" : true\n  ),\n)',scope:"private",line:{start:36,end:47}},type:"map",property:[{type:"Number|String",name:"$contexts.name.background-color",description:"Color value or name of color in $palette"},{type:"Number|String",name:"$contexts.name.color",description:"Color value or name of color in $palette"},{type:"Boolean",name:"$contexts.name.base-class",description:"Print this value in the base module as a class (if base prints)"}],group:["color"],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--mixin--set-contexts","color--mixin--set-contexts","color--function--get-context","color--mixin--all-context-styles"],_uid:"color--variable--contexts"},{description:"Palette entries that are output as classes when using all-color-class-styles\n",context:{type:"variable",name:"color-classes",value:'(\n  "black" : true,\n  "white" : true,\n  "type": true\n)',scope:"default",line:{start:50,end:54}},group:["color"],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--mixin--set-color-classes","color--mixin--set-color-classes","color--mixin--all-color-class-styles"],_uid:"color--variable--color-classes"}],functions:[{description:"Get a color from the palette by name\n",context:{type:"function",name:"get",code:"\n  // Allow non lookup if the value is already a color (helps with code flow)\n  @if (meta.type-of($name) == \"color\") {\n    @return $name;\n  }\n  @return utils.require-map-get($palette, $name, 'color');\n",line:{start:72,end:78}},parameter:[{type:"String",name:"name",description:"Name of color to get"}],return:{type:"Color"},group:["color"],require:[{type:"function",name:"require-map-get",autofill:!0,item:"utils--function--require-map-get"},{type:"variable",name:"palette",autofill:!0,item:"color--variable--palette"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--function--get"},{description:"Get a context by name\n",context:{type:"function",name:"get-context",code:"\n  @return utils.require-map-get($contexts, $name, 'context');\n",line:{start:112,end:114}},parameter:[{type:"String",name:"name",description:"Name of context"}],return:{type:"Map"},group:["color"],require:[{type:"function",name:"require-map-get",autofill:!0,item:"utils--function--require-map-get"},{type:"variable",name:"contexts",autofill:!0,item:"color--variable--contexts"}],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--function--get-context-value","color--mixin--context-styles"],_uid:"color--function--get-context"},{description:"Get a context's value'\n",context:{type:"function",name:"get-context-value",code:'\n  $context: get-context($name);\n  $value: map.get($context, $prop);\n  // Get from pallete by name\n  @if (meta.type-of($value) == "string") {\n    $value: get($value);\n  }\n  @return $value;\n',line:{start:121,end:129}},parameter:[{type:"String",name:"name",description:"Name of context"},{type:"String",name:"prop",description:"The property to get"}],return:{type:"Color"},group:["color"],require:[{type:"function",name:"get-context",autofill:!0,item:"color--function--get-context"},{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"}],file:{path:"_color.scss",name:"_color.scss"},usedBy:["color--mixin--context-styles","color--mixin--context-styles"],_uid:"color--function--get-context-value"},{description:"Lighten a color using the default white by a percentage\n",context:{type:"function",name:"tint",code:'\n  @return mix(get("white"), get($color), $percentage);\n',line:{start:149,end:151}},parameter:[{type:"Color, String",name:"color",description:"Color/palette color name to apply to tint"},{type:"Number",name:"percentage",description:"Percentage"}],return:{type:"Color"},author:[""],link:[{url:"https://css-tricks.com/snippets/sass/tint-shade-functions/",caption:"Modified from source (CSS Tricks, Kitty Giraudel)"}],group:["color"],require:[{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--function--tint"},{description:"Darken a color with the default black by a percentage\n",context:{type:"function",name:"shade",code:'\n  @return mix(get("black"), get($color), $percentage);\n',line:{start:160,end:162}},parameter:[{type:"Color, String",name:"color",description:"Color/palette color name to shade"},{type:"Number",name:"percentage",description:"Percentage to shade"}],return:{type:"Color"},author:["Kitty Giraudel"],link:[{url:"https://css-tricks.com/snippets/sass/tint-shade-functions/",caption:"Modified from source (CSS Tricks, Kitty Giraudel)"}],group:["color"],require:[{type:"function",name:"get",autofill:!0,item:"base--function--get"},{type:"function",name:"get",autofill:!0,item:"base--function--get"}],file:{path:"_color.scss",name:"_color.scss"},_uid:"color--function--shade"}],placeholders:[]}},s=o(24),n=Object(s.a)(a,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"color"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[e._v("#")]),e._v(" Color")]),e._v(" "),o("h2",{attrs:{id:"mixins"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[e._v("#")]),e._v(" Mixins")]),e._v(" "),o("h3",{attrs:{id:"set"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" set()")]),e._v(" "),o("p",[e._v("Used to override or extend the color palette")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[0]}}),e._v(" "),o("h3",{attrs:{id:"set-color-classes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#set-color-classes"}},[e._v("#")]),e._v(" set-color-classes()")]),e._v(" "),o("p",[e._v("Set ouput classes for all-color-class-styles")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[1]}}),e._v(" "),o("h3",{attrs:{id:"set-contexts"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#set-contexts"}},[e._v("#")]),e._v(" set-contexts()")]),e._v(" "),o("p",[e._v("Set color contexts")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[2]}}),e._v(" "),o("h3",{attrs:{id:"context-styles"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#context-styles"}},[e._v("#")]),e._v(" context-styles()")]),e._v(" "),o("p",[e._v("Prints contexts styles")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[3]}}),e._v(" "),o("h3",{attrs:{id:"all-context-styles"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#all-context-styles"}},[e._v("#")]),e._v(" all-context-styles()")]),e._v(" "),o("p",[e._v("Prints all context styles")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[4]}}),e._v(" "),o("h3",{attrs:{id:"all-color-class-styles"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#all-color-class-styles"}},[e._v("#")]),e._v(" all-color-class-styles()")]),e._v(" "),o("p",[e._v("Outputs all color classes")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[5]}}),e._v(" "),o("h2",{attrs:{id:"variables"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),o("h3",{attrs:{id:"palette"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#palette"}},[e._v("#")]),e._v(" $palette")]),e._v(" "),o("p",[e._v("The color palette map, can be extended or modified with set() and accessed with get()")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[0]}}),e._v(" "),o("h3",{attrs:{id:"contexts"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#contexts"}},[e._v("#")]),e._v(" $contexts")]),e._v(" "),o("p",[e._v("Pairs of background-color and color definitions")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[1]}}),e._v(" "),o("h3",{attrs:{id:"color-classes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#color-classes"}},[e._v("#")]),e._v(" $color-classes")]),e._v(" "),o("p",[e._v("Palette entries that are output as classes when using all-color-class-styles")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[2]}}),e._v(" "),o("h2",{attrs:{id:"functions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),o("h3",{attrs:{id:"get"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" get()")]),e._v(" "),o("p",[e._v("Get a color from the palette by name")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[0]}}),e._v(" "),o("h3",{attrs:{id:"get-context"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#get-context"}},[e._v("#")]),e._v(" get-context()")]),e._v(" "),o("p",[e._v("Get a context by name")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[1]}}),e._v(" "),o("h3",{attrs:{id:"get-context-value"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#get-context-value"}},[e._v("#")]),e._v(" get-context-value()")]),e._v(" "),o("p",[e._v("Get a context's value'")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[2]}}),e._v(" "),o("h3",{attrs:{id:"tint"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tint"}},[e._v("#")]),e._v(" tint()")]),e._v(" "),o("p",[e._v("Lighten a color using the default white by a percentage")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[3]}}),e._v(" "),o("h3",{attrs:{id:"shade"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#shade"}},[e._v("#")]),e._v(" shade()")]),e._v(" "),o("p",[e._v("Darken a color with the default black by a percentage")]),e._v(" "),o("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[4]}}),e._v(" "),o("h2",{attrs:{id:"placeholders"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#placeholders"}},[e._v("#")]),e._v(" Placeholders")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);