(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{415:function(e,t,a){"use strict";a.r(t);var s={sassdocGroup:{mixins:[{description:"Update the units preset map\n",context:{type:"mixin",name:"set",code:"\n  $config: map.merge($config, $changes) !global;\n",line:{start:34,end:36}},parameter:[{type:"Map",name:"changes",description:"A map to merge into the color palette"}],example:[{type:"scss",code:'@include units.set((\n  "margin" : 2.5em\n));',description:"Setting the error and type color"}],group:["units"],require:[{type:"variable",name:"config",autofill:!0,item:"base--variable--config"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"_units.scss",name:"_units.scss"},_uid:"units--mixin--set"}],variables:[{description:"Module Settings\n",context:{type:"variable",name:"config",value:'(\n  "small-x" : 1rem * 0.5,\n  "small" : 1rem * 0.75,\n  "default" : 1rem,\n  "large" : 1rem * 2,\n  "large-x" : 1rem * 3,\n  "large-xx" : 1rem * 4\n)',scope:"default",line:{start:18,end:25}},type:"Map",property:[{type:"Number",name:"$config.small-x"},{type:"Number",name:"$config.small"},{type:"Number",name:"$config.default",description:"Base unit of measurent"},{type:"Number",name:"$config.large"},{type:"Number",name:"$config.large-x"},{type:"Number",name:"$config.large-xx"}],group:["units"],file:{path:"_units.scss",name:"_units.scss"},_uid:"units--variable--config"}],functions:[{description:"Get a unit by name (preset) or number (multiplier of base)\n",context:{type:"function",name:"get",code:"\n  @if (meta.type-of($value) == string) {\n    @return utils.require-map-get($config, $value, 'unit [config]');\n  }\n  @return get(\"default\") * $value;\n",line:{start:42,end:47}},parameter:[{type:"Number|String",name:"value",description:"if a number is passed it is used as a multiplier of the base, if a string is passed it is used to lookup a value from unit presets @see $config"}],return:{type:"Number"},group:["units"],require:[{type:"function",name:"require-map-get",autofill:!0,item:"utils--function--require-map-get"},{type:"variable",name:"config",autofill:!0,item:"base--variable--config"}],file:{path:"_units.scss",name:"_units.scss"},_uid:"units--function--get"}],placeholders:[]}},i=a(24),n=Object(i.a)(s,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"units"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#units"}},[e._v("#")]),e._v(" Units")]),e._v(" "),a("h2",{attrs:{id:"mixins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[e._v("#")]),e._v(" Mixins")]),e._v(" "),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" set()")]),e._v(" "),a("p",[e._v("Update the units preset map")]),e._v(" "),a("SassdocItem",{attrs:{item:e.$options.sassdocGroup.mixins[0]}}),e._v(" "),a("h2",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),a("h3",{attrs:{id:"config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" $config")]),e._v(" "),a("p",[e._v("Module Settings")]),e._v(" "),a("SassdocItem",{attrs:{item:e.$options.sassdocGroup.variables[0]}}),e._v(" "),a("h2",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),a("h3",{attrs:{id:"get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" get()")]),e._v(" "),a("p",[e._v("Get a unit by name (preset) or number (multiplier of base)")]),e._v(" "),a("SassdocItem",{attrs:{item:e.$options.sassdocGroup.functions[0]}}),e._v(" "),a("h2",{attrs:{id:"placeholders"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#placeholders"}},[e._v("#")]),e._v(" Placeholders")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);