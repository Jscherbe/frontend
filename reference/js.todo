JS Todos:
  ☐ Setup list-grid switcher script
  ☐ Refactoring to component initializer still needed
    ☐ Scrollpoint @up-next
    ☐ Slider
    ☐ Tabs
    ☐ Theme Toggle
    ☐ Tooltip
    ☐ When Finished
      ☐ Double check all init calls (semicolons, events, etc)
  ☐ Should we make component initializer init async/promise so we can initialize if success, or add callbacks.
    * Currently things get initialize if they were setup regardless of if success or not
  ☐ Need to think about instance management,
    * Removed instances from flipcard but it has the class collecting instances
    * Need something uniform for all ui component instances so they are stored and managed (destroyed/etc) the same way. Not needed currently but will eventually be needed.
  ☐ Need to set init attribute in print @important
  ☐ Refactor class-logger into Logger and extend all classes
    * Maybe this could be used independently too
    * One challenge is should debug flag or level etc, something have it on options others as properties on the class itself instance.options.debug vs instance.debug
  ☐ Create ComponentInstance class
    * As way to consistently manage/create components
    * With dedicated destroy methods (ways to register handlers to be removed, etc)
    * Possibly a way to emit an event from the component (through the events system)
  ✔ Tooltips are duplicating in card demo (maybe elsewhere)? @important @done
  ☐ Prefix breakpoint custom property
    * Check CSS var breakpoint declare too
  ☐ Maybe we should go back to classes as the base for the instances
    * Not make it so tightly coupled like old framework but within each module
    * Something like new UluInstance that can be extended as needed
      * Can output instance by default
      * Pro: Provide global debugging and global debug flag
      * Pro: This would really help and avoid duplicate code
      * Pro: Move common methods to class instead of utilities?
      * Then modules can initiate classes
        * Although it would be helpful to have attributes for init in class
        * new InstanceManager({
          attributes: {
            ...attributes
          },
        }) 
        instanceManager.selectInitial();
        * Then have init() {
          
          instanceManager.start(functionToCreateInstance);
          // Return the manager for the user if they need to something complicated
          // May not be needed
          return instanceManager;
        }    
      * Con Maybe: What about issues with references (ie destroy and garbage collection)?
      * May need to change name to ComponentInstanceManager
  ✔ Setup config module @done
    ✔ Setup but issue with settings being set before changes can occur @done
  ☐ Need to double check the theme toggle
    ☐ Needs to be node js safe like other modules
    ☐ Check logic and implementation
  ☐ Should events just be a ui module? (but I think it's useful if we build more event types/system)
  ☐ Look through all setup (ie init > setup) to make sure they work with or around the context from pageModified event
  ☐ Create a solution for the repeating init attributes and selectors (DRY)
  ☐ issue with scroll-slider where the first items don't scroll back into view