SCSS Todos:
  ☐ Make sure modal styles still work with resizer @important
  ☐ Make sure all color values go through color get (in modules)
  ☐ Accordion carrot icon swap vs. icon rotate. How would we handle that? Modifier? (if not rotate, user has to give 2 images).
    * Look into using css icons and supporting both methods
    * Accordion add css icon active modifier is-active have activating selector option and build the selector. The user can specify other selectors
    * No need for default, custom icons do their own thing in user style sheet include a Nixon to create the active selector for the icon. Make the transition time a module setting. Maybe make animation core module to have global setting or maybe add to element like duration and timing. Then we need fullbacks which are ok I guess
    * Maybe instead of fallbacks we put fallback methods on core modules ie element.get-as-fallback(key, value)
    Or have function util.fallback
    The issue with this technique vs fallback map is the fallback method system while more verbose allows any user to grab computed property vs having to match implementation. Which is helpful for third party user who may not be aware of value that are or are not defined (complex cases) but honking it through
  ☐ Could tint/shade custom properties if passes to mixins in the future @idea
    * Need to think this all the way through before setting anything like this up
    * Browser compatablity started in 2023 (not that great)
    * Not sure this would have the affect that would be wanted 
      * In different themes (ie. light/dark) the shading or tinting may not work for all themes (guess this would be a used decision)
    * Could be additional mixin color-css-shade color-css-tint
    * See https://codepen.io/Jscherbe/pen/abeOjoN
  ☐ Should container have defaults by default (ie preset ones)
    ☐ Should we add margins for defaults (ie margin-small)
      * We can then get rid of site-margin variables and use config
    ☐ Need to see how well reponsive containers work again, much simpler but the ability to not be able to set the mobile margin is probably a reason to move away from that for the default, then have the one breakpoint
      * I don't think it needs to support mutiple breakpoints for the presets really the main margin and the mobile margin are all that's needed. If user has other margin needs they can setup custom containers and use their own variables or add custom properties to config (ie "margin-medium")
  ☐ Setup Flipcard scss module (and test js)
  ☐ Setup Slider scss module (and test js)
  ☐ Explore ways to make multiple color palettes for css-vars easier? @priority-low
  ☐ Solution for fallback colors in user side?
    ☐ Some utility to pass values or variables from so that if undefined user gets notice but the value is left null or default?
  ☐ Make button default styles have no hover @important
  ☐ Fix examples for how to use the set mixins
  ☐ Idea: scaffolding for configs
  ☐ Change color-context to background by default?
  ☐ Should we have the typography sizes print out in two different modules?
    * Originally this way so that some sizes could be utilities (overrides) (like type-large)
      and some can be base (top of stylesheet, can be overridden by components, overrides, etc).
      This makes it flexible
    ☐ At the least the code in both modules should be a shared typography utility?
  ✘ Remove calc fallback in typography so that font-size can be variables etc @cancelled
    * Note: The mixin is still needed because font size can be adaptive
      * Should we work around this
  ☐ Add table styling module
  ☐ Apply the new breakpoint.from-each and utils.map-contains-any
    * Where appropriate, may not be another need for utils.map-contains-any
  ☐ Change all psuedo selectors to "::" ie .selector::after
  ☐ Need to check all module names are correct and set mixins have the correct error names
  ☐ Fix all typos 
  ☐ Make sure all arguments and config properties are documented (sassdoc)
  ☐ Tag module needs to be set up
  ☐ WYSIWYG (excludes) - This should be refacotred to dedicated mixins to push exlcudes
    ☐ Then remove list lines and add it to its's own module and call mixin