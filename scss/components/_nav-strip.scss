////
/// @group nav-strip
////
/// A horizontal navigation strip or rail that displays a list of links to
/// different pages or sections of a website. The active link, indicating the 
/// current page or section, is visually emphasized with an underline.

@use "sass:map";

@use "../utils";
@use "../color";
@use "../selector";
@use "../typography";

/// Module Settings
/// @type Map
/// @prop {Color} color [null] Type color for the nav-strip.
/// @prop {Color} color-hover [null] Type color for the nav-strip when hovered or focused.
/// @prop {Color} color-active [null] Type color for the nav-strip when active.
/// @prop {CssValue} font-weight [null] Font weight of navstrip.
/// @prop {Dimension} padding-x [0] Horizontal padding for the nav-strip links.
/// @prop {Dimension} padding-y [0.3em] Vertical padding for the nav-strip links.
/// @prop {Color} underline-color [orange] Underline color when link is active.
/// @prop {Dimension} underline-size [3px] Size of the underline.
/// @prop {Dimension} margin-between [2.25em] Margin between nav-strip items.
/// @prop {Color} underline-color-hover [gray] Color of the underline when hovered or focused.
/// @prop {String} activeSelector [.is-active] Selector that portrays active status.
/// @prop {Dimension} rule-size [3px] Size of the nav-strip rule.
/// @prop {String} rule-color [rule] Rule color. Uses rule.scss so the value of this options should be a variable from rule.scss.
/// @prop {Dimension} rule-offset [-3px] Offset the rule for the navstrip.
/// @prop {Dimension} padding-y-ruled [null] Vertical padding for the nav-strip links when using nav-strip--rule.
/// @prop {Boolean} nowrap [true] Disables the word wrap.

$config: (
  "color" : null,
  "color-hover" : null,
  "color-active" : null,
  "font-weight" : null,
  "padding-x" : 0,
  "padding-y" : 0.3em,
  "underline-color" : orange,
  "underline-size" : 3px,
  "margin-between" : 2.25em,
  "underline-color-hover" : gray,
  "activeSelector" : ".is-active",
  "rule-size" : 3px,
  "rule-color" : "rule",
  "rule-offset" : -3px,
  "padding-y-ruled" : null,
  "nowrap" : true,
) !default;


/// Change modules $config
/// @param {Map} $changes Map of changes
///   @include module-name.set(( "property" : value ));

@mixin set($changes) {
  $config: map.merge($config, $changes) !global;
}

/// Get a config option
/// @param {Map} $name Name of property
///   @include module-name.get("property");

@function get($name) {
  @return utils.require-map-get($config, $name, "card [config]");
}

/// Prints component styles
/// @example scss
///  @include ulu.component-example-styles();

@mixin styles {
  $prefix: selector.class("nav-strip");

  // Original thought to not limit to direct child
  // auto is for when we don't have control over markup
  // The list descendants will be selected that way but the list is
  // currently selecting any list/list-item
  #{ $prefix }__list,
  #{ $prefix }--auto ul {
    display: flex;
    line-height: typography.get("line-height-dense");
  }
  #{ $prefix }__item,
  #{ $prefix }--auto li {
    margin-right: get("margin-between");
    // layout flex since items inside may not be the same height
    display: flex;
    align-items: flex-end;
    &:last-child {
      margin-right: 0;
    }
  }
  
  #{ $prefix }__link,
  #{ $prefix }--auto li > a,
  #{ $prefix }--auto li > button {
    display: block;
    color: get("color");
    padding: get("padding-y") get("padding-x");
    border-top: get("underline-size") solid transparent;
    border-bottom: get("underline-size") solid transparent;
    font-weight: get("font-weight");
    @if (get("nowrap")) {
      white-space: nowrap;
    }
    &:hover,
    &:focus {
      border-bottom-color: get("underline-color-hover");
      color: get("color-hover");
    }
    &#{ get("activeSelector") } {
      border-bottom-color: get("underline-color");
      color: get("color-active");
    }
  }
  
  // Modifiers
  #{ $prefix }--right {
    #{ $prefix }__list,
    &#{ $prefix }--auto ul {
      justify-content: flex-end;
    }
  }
  #{ $prefix }--center {
    #{ $prefix }__list,
    &#{ $prefix }--auto ul {
      justify-content: center;
    }
  }
  #{ $prefix }--rule {
    #{ $prefix }__list,
    &#{ $prefix }--auto ul {
      border-bottom: get("rule-size") solid color.get(get("rule-color"));
    }
    #{ $prefix }__link,
    &#{ $prefix }--auto li > a,
    &#{ $prefix }--auto li > button {
      margin-bottom: get("rule-offset");
      padding-top: get("padding-y-ruled");
      padding-bottom: get("padding-y-ruled");
    }
  }
}
