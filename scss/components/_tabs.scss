////
/// @group tabs
////

@use "sass:map";
@use "sass:meta";

@use "../color";
@use "../selector";
@use "../breakpoint";
@use "../element";
@use "../utils";

// Used for function fallback
$-fallbacks: (
  "tablist-border-bottom" : (
    "function" : meta.get-function("get-rule-style", false, "element"),
    "arguments" : ("light",)
  )
);

/// Module Settings
/// @type Map
/// @prop {Dimension} border-radius [8px] The border radius of the tabs.
/// @prop {Dimension} border-width [0.25em] The width of the tab border.
/// @prop {Dimension} margin [2rem] The gap between tabs and above and below tabs.
/// @prop {Dimension} print-margin [1.5em] The subtab margin of child tabs.
/// @prop {CssValue} tablist-border-bottom [true] The bottom border of the tabs. If set to true, will use the element.scss property for "get-rule-style".
/// @prop {Color} tabpanel-background-color [rgb(245, 245, 245)] The tabpanel background color.
/// @prop {Color} tab-border-color-selected [currentColor] The border color when selected.
/// @prop {String} tab-color [link] The type color for the tabs. This uses color.scss, so the value of this options should be a variable from color.scss.
/// @prop {String} tab-color-hover [link-hover] The type color for the tabs when hovered or focused. This uses color.scss, so the value of this options should be a variable from color.scss.
/// @prop {String} tab-color-selected [selected] The tab type color when selected. This uses color.scss, so the value of this options should be a variable from color.scss.

$config: (
  "border-radius" : 8px,
  "border-width" : 0.25em,
  "margin" : 2rem,
  "print-margin" : 1.5em,
  "tablist-border-bottom" : true,
  "tabpanel-background-color" : rgb(245, 245, 245),

  "tab-border-color-selected" : currentColor,
  "tab-color" : "link",
  "tab-color-hover" : "link-hover",
  "tab-color-selected" : "selected",
) !default;

/// Change modules $config
/// @param {Map} $changes Map of changes
///   @include module-name.set(( "property" : value ));

@mixin set($changes) {
  $config: map.merge($config, $changes) !global;
}

/// Get a config option
/// @param {Map} $name Name of property
///   @include module-name.get("property");

@function get($name) {
  $value: utils.require-map-get($config, $name, "component-tabs [config]");
  @return utils.function-fallback($name, $value, $-fallbacks);
}

/// Prints tabs component styles
/// @example scss
///  @include ulu.component-tabs-styles();

@mixin styles {
  @include utils.file-header("component", "tabs");

  $prefix: selector.class("tabs");

  #{ $prefix } {
    margin-bottom: get("margin");
    margin-top: get("margin");
    [role="tablist"] {
      position: relative;
      z-index: 2;
      display: flex; 
      overflow-x: auto;
      margin-bottom: -1px;
      border-bottom: get("tablist-border-bottom");
    }
    [role="tab"] {
      display: block;
      position: relative; 
      cursor: pointer;
      padding: 0.75em 0.1em 0.75em 0.1em;
      color: color.get(get("tab-color"));
      font-weight: bold;
      border-bottom: get("border-width") solid transparent;
      text-align: center;
      white-space: nowrap;
      &:not(:first-child) {
        margin-left: 1.25em;
        @include breakpoint.min("small") {
          margin-left: 2em;
        }
      }
      &:hover {
        color: color.get(get("tab-color-hover"));
      }
      &:hover,
      &:focus,
      &[aria-selected="true"] {
        border-bottom-color: currentColor;
      }
      &[aria-selected="true"] {
        color: color.get(get("tab-color-selected"));
        border-bottom-color: get("tab-border-color-selected");
        opacity: 1;
      }
    }
    [role="tabpanel"] {
      position: relative;
      z-index: 1;
      padding: 2rem get("margin");
      margin-bottom: -1px;
      overflow: hidden;

      background-color: get("tabpanel-background-color");
      [class*="video-embed"],
      .full-width-image {
        margin-left: -(get("margin"));
        margin-right: -(get("margin"));
        width: calc(100% + #{ get("margin")  * 2 });
        max-width: none;
        &:first-child {
          margin-top: -2rem;
        }
        &:last-child {
          margin-bottom: -2rem;
        }
      }
    }
  }
  #{ $prefix }--transparent {
    [role="tablist"] {
      background-color: transparent;
      box-shadow: none;
      padding-left: 0;
      padding-right: 0;
    }
    [role="tabpanel"] {
      background-color: transparent;
      padding-left: 0;
      padding-right: 0;
    }
  }

  #{ $prefix }--full-width {
    > [role="tablist"] {
      justify-content: safe center;
      box-shadow: 0 4px 4px rgba(0,0,0,0.2);
    }
    >[role="tabpanel"] {
      background-color: transparent;
      padding: 0;
    }
  }
  // Display all tabs during print
  #{ $prefix }--print {
    @media print {
      [role="tablist"] {
        display: none;
      }
      [role="tabpanel"] {
        display: block;
        + [role="tabpanel"] {
          margin-top: get("print-margin");
        }
      }
    }
  }
}